{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\CardDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport config from \"../config\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport MultipleChoiceCardReview from \"../shared/MultipleChoiceCardReview\";\nimport RememberCardReview from \"../shared/RememberCardReview\";\nimport FillCardReview from \"../shared/FillCardReview\";\nimport { showFadeMessage } from \"../sharedFunctions\";\nimport { ScrollView } from 'react-native-gesture-handler';\nvar initialState = {\n  showAnswer: false,\n  isAnswerCorrect: false\n};\nexport default function CardDetails(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showIntervals = _useState2[0],\n      setShowIntervals = _useState2[1];\n\n  var _useState3 = useState(navigation.getParam('cardsToStudy')),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cardsToStudy = _useState4[0],\n      setCardsToStudy = _useState4[1];\n\n  var setNextReview = navigation.getParam('setNextReview');\n  var deckTitle = navigation.getParam('deckTitle');\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fadeMessage = _useState6[0],\n      setFadeMessage = _useState6[1];\n\n  var _useState7 = useState(initialState),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cardStatus = _useState8[0],\n      setCardStatus = _useState8[1];\n\n  var intervals = {\n    again: null,\n    hard: null,\n    good: null,\n    easy: null\n  };\n\n  var setIntervals = function setIntervals() {\n    var reviewInterval = cardsToStudy[0].nextReview - cardsToStudy[0].lastReview;\n\n    if (reviewInterval === 0) {\n      intervals.good = 6e+5;\n    } else if (reviewInterval <= 6e+5) {\n      intervals.good = 7.2e+6;\n    } else if (reviewInterval <= 7.2e+6) {\n      intervals.good = 8.64e+7;\n    } else if (reviewInterval <= 8.64e+7) {\n      intervals.good = 1.728e+8;\n    } else if (reviewInterval <= 1.728e+8) {\n      intervals.good = 2.592e+8;\n    } else if (reviewInterval <= 2.592e+8) {\n      intervals.good = 4.32e+8;\n    } else if (reviewInterval > 4.32e+8) {\n      intervals.good = 8.64e+8;\n    } else if (reviewInterval > 8.64e+8) {\n      intervals.good = reviewInterval + 8.64e+8;\n    }\n\n    intervals.easy = intervals.good * config.easy;\n    intervals.hard = intervals.good * config.hard;\n    intervals.again = reviewInterval === 0 ? 0 : 6e+5;\n  };\n\n  var invervalFormatted = function invervalFormatted(time) {\n    if (time < 3.6e+6) {\n      return Math.round(time / 6e+4) + \" minutes\";\n    }\n\n    if (time < 7.2e+6) {\n      return '1 hour';\n    }\n\n    if (time < 8.64e+7) {\n      return Math.round(time / 3.6e+6) + \" hours\";\n    }\n\n    if (time < 1.728e+8) {\n      return '1 day';\n    }\n\n    if (time < 2.628e+9) {\n      return Math.round(time / 8.64e+7) + \" days\";\n    }\n\n    if (time < 5.256e+9) {\n      return '1 month';\n    }\n\n    if (time < 3.154e+10) {\n      return Math.round(time / 2.628e+9) + \" months\";\n    }\n\n    if (time < 6.307e+10) {\n      return '1 year';\n    }\n\n    if (time >= 6.307e+10) {\n      return \"\" + Math.round(time / 3.154e+10);\n    }\n  };\n\n  var setNextReviewAndCardsToStudy = function setNextReviewAndCardsToStudy(interval) {\n    Keyboard.dismiss();\n    setNextReview(deckTitle, cardsToStudy[0].key, interval);\n    setShowIntervals(false);\n    cardsToStudy.shift();\n    setCardsToStudy(_toConsumableArray(cardsToStudy));\n    setCardStatus(initialState);\n  };\n\n  var verifyUserAnswer = function verifyUserAnswer(userAnswer) {\n    Keyboard.dismiss();\n\n    if (userAnswer) {\n      setShowIntervals(true);\n    } else {\n      setFadeMessage(showFadeMessage('Wrong answer'));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.container), globalStyles.subContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, cardsToStudy.length === 0 ? React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      marginBottom: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.goodJob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Good job!\"), React.createElement(Text, {\n    style: styles.noMoreCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"No more cards to study\")) : React.createElement(React.Fragment, null, setIntervals(), cardsToStudy[0].type === 'Remember card' && React.createElement(RememberCardReview, {\n    card: cardsToStudy[0],\n    verifyUserAnswer: verifyUserAnswer,\n    cardStatus: cardStatus,\n    setCardStatus: setCardStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 22\n    }\n  }), cardsToStudy[0].type === 'Fill card' && React.createElement(FillCardReview, {\n    card: cardsToStudy[0],\n    verifyUserAnswer: verifyUserAnswer,\n    cardStatus: cardStatus,\n    setCardStatus: setCardStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 22\n    }\n  }), cardsToStudy[0].type === 'Multiple choice card' && React.createElement(MultipleChoiceCardReview, {\n    card: cardsToStudy[0],\n    verifyUserAnswer: verifyUserAnswer,\n    cardStatus: cardStatus,\n    setCardStatus: setCardStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 22\n    }\n  }))), fadeMessage)), showIntervals && React.createElement(View, {\n    style: styles.buttonsConteiner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.again);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#e63946'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Again\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, invervalFormatted(intervals.again) === '0 minutes' ? 'Now' : invervalFormatted(intervals.again)))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.hard);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#A7A7A7'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Hard\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, invervalFormatted(intervals.hard)))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.good);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#07B549'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Good\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, invervalFormatted(intervals.good)))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.easy);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#46E6FF'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Easy\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, invervalFormatted(intervals.easy))))));\n}\nvar styles = StyleSheet.create({\n  buttonsConteiner: {\n    flexDirection: 'row',\n    flex: 1\n  },\n  buttonText: {\n    alignSelf: 'flex-end',\n    flex: 1,\n    margin: 1,\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10\n  },\n  perception: {\n    textAlign: 'center'\n  },\n  interval: {\n    fontSize: 12,\n    textAlign: 'center'\n  },\n  goodJob: _objectSpread(_objectSpread(_objectSpread({}, globalStyles.text), globalStyles.geniusColor), {}, {\n    fontSize: 25,\n    textAlign: 'center',\n    marginVertical: 20\n  }),\n  noMoreCards: _objectSpread(_objectSpread({}, globalStyles.text), {}, {\n    fontSize: 16,\n    textAlign: 'center',\n    marginVertical: 20\n  })\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/CardDetails.js"],"names":["React","useState","useEffect","config","globalStyles","MultipleChoiceCardReview","RememberCardReview","FillCardReview","showFadeMessage","ScrollView","initialState","showAnswer","isAnswerCorrect","CardDetails","navigation","showIntervals","setShowIntervals","getParam","cardsToStudy","setCardsToStudy","setNextReview","deckTitle","fadeMessage","setFadeMessage","cardStatus","setCardStatus","intervals","again","hard","good","easy","setIntervals","reviewInterval","nextReview","lastReview","invervalFormatted","time","Math","round","setNextReviewAndCardsToStudy","interval","Keyboard","dismiss","key","shift","verifyUserAnswer","userAnswer","flexGrow","container","subContainer","flex","length","justifyContent","marginBottom","styles","goodJob","noMoreCards","type","buttonsConteiner","buttonText","backgroundColor","perception","StyleSheet","create","flexDirection","alignSelf","margin","paddingTop","paddingBottom","borderRadius","textAlign","fontSize","text","geniusColor","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, TextInput, Keyboard, Animated } from 'react-native';\r\nimport config from '../config';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport MultipleChoiceCardReview from '../shared/MultipleChoiceCardReview';\r\nimport RememberCardReview from '../shared/RememberCardReview';\r\nimport FillCardReview from '../shared/FillCardReview';\r\nimport { showFadeMessage } from '../sharedFunctions';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst initialState = {\r\n  showAnswer: false,\r\n  isAnswerCorrect: false,\r\n};\r\n\r\nexport default function CardDetails ({ navigation }) {\r\n  const [showIntervals, setShowIntervals] = useState(false);\r\n  const [cardsToStudy, setCardsToStudy] = useState(navigation.getParam('cardsToStudy'));\r\n  const setNextReview = navigation.getParam('setNextReview');\r\n  const deckTitle = navigation.getParam('deckTitle');\r\n  const [fadeMessage, setFadeMessage] = useState(false);\r\n  const [cardStatus, setCardStatus] = useState(initialState);\r\n  const intervals = {\r\n    again: null,\r\n    hard: null,\r\n    good: null,\r\n    easy: null,\r\n  };\r\n\r\n  const setIntervals = () => {\r\n    const reviewInterval = cardsToStudy[0].nextReview - cardsToStudy[0].lastReview;\r\n    if (reviewInterval === 0) {\r\n      intervals.good = 6e+5;\r\n    } else if (reviewInterval <= 6e+5) {   // 10 min\r\n      intervals.good = 7.2e+6;\r\n    } else if (reviewInterval <= 7.2e+6) {  // 2 hours\r\n      intervals.good = 8.64e+7;\r\n    } else if (reviewInterval <= 8.64e+7) {   // 1 day\r\n      intervals.good = 1.728e+8;\r\n    } else if (reviewInterval <= 1.728e+8) {  // 2 days\r\n      intervals.good = 2.592e+8;\r\n    } else if (reviewInterval <= 2.592e+8) { // 3 days\r\n      intervals.good = 4.32e+8;\r\n    } else if (reviewInterval > 4.32e+8) { // 5 days\r\n      intervals.good = 8.64e+8;\r\n    } else if (reviewInterval > 8.64e+8) { // 10 days\r\n      intervals.good = reviewInterval + 8.64e+8;\r\n    }\r\n    intervals.easy = intervals.good * config.easy;\r\n    intervals.hard = intervals.good * config.hard;\r\n    intervals.again = reviewInterval === 0 ? 0 : 6e+5;   // 10 min\r\n  };\r\n\r\n  const invervalFormatted = (time) => {\r\n    if (time < 3.6e+6) {  // 1 hour\r\n      return `${Math.round(time / 6e+4)} minutes`;\r\n    }\r\n    if (time < 7.2e+6) {  // 2 hours\r\n      return '1 hour';\r\n    }\r\n    if (time < 8.64e+7) {  // 1 day\r\n      return `${Math.round(time / 3.6e+6)} hours`;\r\n    }\r\n    if (time < 1.728e+8) { // 2 days\r\n      return '1 day';\r\n    }\r\n    if (time < 2.628e+9) { // 1 month\r\n      return `${Math.round(time / 8.64e+7)} days`;\r\n    }\r\n    if (time < 5.256e+9) { // 2 months\r\n      return '1 month';\r\n    }\r\n    if (time < 3.154e+10) {  // 1 year\r\n      return `${Math.round(time / 2.628e+9)} months`;\r\n    }\r\n    if (time < 6.307e+10) {  // 2 year\r\n      return '1 year';\r\n    }\r\n    if (time >= 6.307e+10) {  // 2 year\r\n      return `${Math.round(time / 3.154e+10)}`;\r\n    }\r\n  }\r\n\r\n  const setNextReviewAndCardsToStudy = (interval) => {\r\n    Keyboard.dismiss();\r\n    setNextReview(deckTitle, cardsToStudy[0].key, interval);\r\n    setShowIntervals(false);\r\n    cardsToStudy.shift();\r\n    setCardsToStudy([...cardsToStudy]);\r\n    setCardStatus(initialState);\r\n  }\r\n\r\n  const verifyUserAnswer = (userAnswer) => {\r\n    Keyboard.dismiss();\r\n    if (userAnswer) {\r\n      setShowIntervals(true);\r\n    } else {\r\n      setFadeMessage(showFadeMessage('Wrong answer'));\r\n    }\r\n  }\r\n\r\n\r\n  return <>\r\n    <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n      <View style={{ ...globalStyles.container, ...globalStyles.subContainer }}>\r\n        <View style={{ flex: 1 }}>\r\n          {\r\n            cardsToStudy.length === 0\r\n              ? <View style={{ flex: 1, justifyContent: 'center', marginBottom: 40 }}>\r\n                < Text style={styles.goodJob}>Good job!</Text>\r\n                < Text style={styles.noMoreCards}>No more cards to study</Text>\r\n              </View>\r\n              : <>\r\n                {setIntervals()}\r\n                {\r\n                  cardsToStudy[0].type === 'Remember card'\r\n                  && <RememberCardReview\r\n                    card={cardsToStudy[0]}\r\n                    verifyUserAnswer={verifyUserAnswer}\r\n                    cardStatus={cardStatus}\r\n                    setCardStatus={setCardStatus}\r\n                  />\r\n                }\r\n                {\r\n                  cardsToStudy[0].type === 'Fill card'\r\n                  && <FillCardReview\r\n                    card={cardsToStudy[0]}\r\n                    verifyUserAnswer={verifyUserAnswer}\r\n                    cardStatus={cardStatus}\r\n                    setCardStatus={setCardStatus}\r\n                  />\r\n                }\r\n                {\r\n                  cardsToStudy[0].type === 'Multiple choice card'\r\n                  && <MultipleChoiceCardReview\r\n                    card={cardsToStudy[0]}\r\n                    verifyUserAnswer={verifyUserAnswer}\r\n                    cardStatus={cardStatus}\r\n                    setCardStatus={setCardStatus}\r\n                  />\r\n                }\r\n              </>\r\n          }\r\n        </View>\r\n        {\r\n          fadeMessage\r\n        }\r\n      </View>\r\n    </ScrollView>\r\n    {\r\n      showIntervals &&\r\n      <View style={styles.buttonsConteiner}>\r\n        <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.again)} style={[styles.buttonText, { backgroundColor: '#e63946' }]}>\r\n          <View>\r\n            <Text style={styles.perception}>Again</Text>\r\n            <Text style={styles.interval}>{invervalFormatted(intervals.again) === '0 minutes' ? 'Now' : invervalFormatted(intervals.again)}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.hard)} style={[styles.buttonText, { backgroundColor: '#A7A7A7' }]}>\r\n          <View>\r\n            <Text style={styles.perception}>Hard</Text>\r\n            <Text style={styles.interval}>{invervalFormatted(intervals.hard)}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.good)} style={[styles.buttonText, { backgroundColor: '#07B549' }]}>\r\n          <View>\r\n            <Text style={styles.perception}>Good</Text>\r\n            <Text style={styles.interval}>{invervalFormatted(intervals.good)}</Text>\r\n          </View>\r\n        </TouchableOpacity >\r\n        <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.easy)} style={[styles.buttonText, { backgroundColor: '#46E6FF' }]}>\r\n          <View>\r\n            <Text style={styles.perception}>Easy</Text>\r\n            <Text style={styles.interval}>{invervalFormatted(intervals.easy)}</Text>\r\n          </View>\r\n        </TouchableOpacity >\r\n      </View >\r\n    }\r\n  </>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonsConteiner: {\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n  },\r\n  buttonText: {\r\n    alignSelf: 'flex-end',\r\n    flex: 1,\r\n    margin: 1,\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    borderRadius: 10,\r\n  },\r\n  perception: {\r\n    textAlign: 'center',\r\n  },\r\n  interval: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n  },\r\n  goodJob: {\r\n    ...globalStyles.text,\r\n    ...globalStyles.geniusColor,\r\n    fontSize: 25,\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  noMoreCards: {\r\n    ...globalStyles.text,\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginVertical: 20\r\n  }\r\n}); "]},"metadata":{},"sourceType":"module"}