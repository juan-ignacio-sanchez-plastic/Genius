{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\FillCardReview.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Formik } from 'formik';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Button from \"./Button\";\nimport { verifyAnswer } from \"../sharedFunctions\";\nimport Card from \"../shared/Card\";\nexport default function FillCardReview(_ref) {\n  var card = _ref.card,\n      verifyUserAnswer = _ref.verifyUserAnswer,\n      cardStatus = _ref.cardStatus,\n      setCardStatus = _ref.setCardStatus;\n  var showAnswer = cardStatus.showAnswer,\n      isAnswerCorrect = cardStatus.isAnswerCorrect;\n  return React.createElement(Formik, {\n    initialValues: {\n      userAnswer: null\n    },\n    onSubmit: function onSubmit(_ref2) {\n      var userAnswer = _ref2.userAnswer;\n      var isCorrect = verifyAnswer(userAnswer, card);\n      verifyUserAnswer(isCorrect);\n      if (isCorrect) setCardStatus({\n        showAnswer: true,\n        isAnswerCorrect: true\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, function (formikProps) {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, card.front)), showAnswer && React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, card.answer)), isAnswerCorrect || React.createElement(React.Fragment, null, React.createElement(TextInput, {\n      multiline: true,\n      style: globalStyles.input,\n      placeholder: \"Write your answer...\",\n      onChangeText: formikProps.handleChange('userAnswer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      text: \"Verify\",\n      onPress: formikProps.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })), !showAnswer && React.createElement(Text, {\n      style: {\n        color: '#898888',\n        textAlign: 'center',\n        marginTop: 20\n      },\n      onPress: function onPress() {\n        return setCardStatus(_objectSpread(_objectSpread({}, cardStatus), {}, {\n          showAnswer: true\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Show answer\"));\n  });\n}","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/FillCardReview.js"],"names":["React","useState","Formik","globalStyles","Button","verifyAnswer","Card","FillCardReview","card","verifyUserAnswer","cardStatus","setCardStatus","showAnswer","isAnswerCorrect","userAnswer","isCorrect","formikProps","front","answer","input","handleChange","handleSubmit","color","textAlign","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,YAAT;AAEA,OAAOC,MAAP;AACA,SAASC,YAAT;AACA,OAAOC,IAAP;AAEA,eAAe,SAASC,cAAT,OAAgF;AAAA,MAArDC,IAAqD,QAArDA,IAAqD;AAAA,MAA/CC,gBAA+C,QAA/CA,gBAA+C;AAAA,MAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AAAA,MACrFC,UADqF,GACrDF,UADqD,CACrFE,UADqF;AAAA,MACzEC,eADyE,GACrDH,UADqD,CACzEG,eADyE;AAG7F,SACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADjB;AAEE,IAAA,QAAQ,EAAE,yBAAoB;AAAA,UAAjBA,UAAiB,SAAjBA,UAAiB;AAC5B,UAAMC,SAAS,GAAGV,YAAY,CAACS,UAAD,EAAaN,IAAb,CAA9B;AACAC,MAAAA,gBAAgB,CAACM,SAAD,CAAhB;AACA,UAAIA,SAAJ,EAAeJ,aAAa,CAAC;AAAEC,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA,eAAe,EAAE;AAArC,OAAD,CAAb;AAChB,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,UAACG,WAAD;AAAA,WACE,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOR,IAAI,CAACS,KAAZ,CADF,CADF,EAKIL,UAAU,IACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOJ,IAAI,CAACU,MAAZ,CADF,CANJ,EAWIL,eAAe,IACf,0CACE,oBAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAEV,YAAY,CAACgB,KAFtB;AAGE,MAAA,WAAW,EAAC,sBAHd;AAIE,MAAA,YAAY,EAAEH,WAAW,CAACI,YAAZ,CAAyB,YAAzB,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEJ,WAAW,CAACK,YAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAZJ,EA0BI,CAACT,UAAD,IACA,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,SAAS,EAAE,QAA/B;AAAyCC,QAAAA,SAAS,EAAE;AAApD,OADT;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMb,aAAa,iCAAMD,UAAN;AAAkBE,UAAAA,UAAU,EAAE;AAA9B,WAAnB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA3BJ,CADF;AAAA,GATJ,CADF;AAgDD","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TouchableOpacity, Text, TextInput, View, Keyboard } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\nimport Button from './Button';\r\nimport { verifyAnswer } from '../sharedFunctions';\r\nimport Card from '../shared/Card';\r\n\r\nexport default function FillCardReview ({ card, verifyUserAnswer, cardStatus, setCardStatus }) {\r\n  const { showAnswer, isAnswerCorrect } = cardStatus;\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ userAnswer: null }}\r\n      onSubmit={({ userAnswer }) => {\r\n        const isCorrect = verifyAnswer(userAnswer, card);\r\n        verifyUserAnswer(isCorrect);\r\n        if (isCorrect) setCardStatus({ showAnswer: true, isAnswerCorrect: true })\r\n      }}\r\n    >\r\n      {\r\n        (formikProps) => (\r\n          <>\r\n            <Card>\r\n              <Text>{card.front}</Text>\r\n            </Card>\r\n            {\r\n              showAnswer &&\r\n              <Card>\r\n                <Text>{card.answer}</Text>\r\n              </Card>\r\n            }\r\n            {\r\n              isAnswerCorrect ||\r\n              <>\r\n                <TextInput\r\n                  multiline\r\n                  style={globalStyles.input}\r\n                  placeholder='Write your answer...'\r\n                  onChangeText={formikProps.handleChange('userAnswer')}\r\n                />\r\n                <Button\r\n                  text='Verify'\r\n                  onPress={formikProps.handleSubmit}\r\n                />\r\n              </>\r\n            }\r\n            {\r\n              !showAnswer &&\r\n              <Text\r\n                style={{ color: '#898888', textAlign: 'center', marginTop: 20 }}\r\n                onPress={() => setCardStatus({ ...cardStatus, showAnswer: true })}\r\n              >Show answer</Text>\r\n            }\r\n          </>\r\n        )\r\n      }\r\n    </Formik>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}