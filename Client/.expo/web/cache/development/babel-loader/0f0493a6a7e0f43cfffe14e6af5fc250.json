{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\Community.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Card from \"../shared/Card\";\nimport apiClient from \"../apiClient\";\nimport { showFadeMessage } from \"../sharedFunctions\";\nexport default function Community(_ref) {\n  var navigation = _ref.navigation,\n      screenProps = _ref.screenProps;\n  var decks = screenProps.decks,\n      setDecks = screenProps.setDecks;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      communityDecks = _useState2[0],\n      setCommunityDecks = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fadeMessage = _useState4[0],\n      setFadeMessage = _useState4[1];\n\n  var handleDownload = function handleDownload(key) {\n    var downloadedDeck;\n    return _regeneratorRuntime.async(function handleDownload$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(apiClient.downloadDeck(key));\n\n          case 2:\n            downloadedDeck = _context.sent;\n\n            if (downloadedDeck) {\n              setDecks([].concat(_toConsumableArray(decks), [downloadedDeck]));\n              setFadeMessage(showFadeMessage('Deck downloaded'));\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var loadDecks = function loadDecks() {\n    return _regeneratorRuntime.async(function loadDecks$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            apiClient.getAllCommunityDecks().then(function (decks) {\n              return setCommunityDecks(decks);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    loadDecks();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    ListHeaderComponent: React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, globalStyles.titleText), {}, {\n        textAlign: 'center',\n        marginTop: 20\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 30\n      }\n    }, \"Shared by the Community\"),\n    data: communityDecks,\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: {\n          marginHorizontal: 20,\n          marginBottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('CommunityDeckDetails', {\n            item: item,\n            handleDownload: handleDownload\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, globalStyles.titleText), {}, {\n          marginBottom: 10\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, item.title), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.geniusColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }\n      }, item.author)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleDownload(item.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.geniusColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, \"Download\")))))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), fadeMessage);\n}","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/Community.js"],"names":["React","useState","useEffect","FontAwesome","globalStyles","Card","apiClient","showFadeMessage","Community","navigation","screenProps","decks","setDecks","communityDecks","setCommunityDecks","fadeMessage","setFadeMessage","handleDownload","key","downloadDeck","downloadedDeck","loadDecks","getAllCommunityDecks","then","flex","titleText","textAlign","marginTop","item","_id","marginHorizontal","marginBottom","push","title","flexDirection","justifyContent","geniusColor","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity, ScrollView } from 'react-native';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport Card from '../shared/Card';\r\nimport apiClient from '../apiClient';\r\nimport { showFadeMessage } from '../sharedFunctions';\r\n\r\nexport default function Community ({ navigation, screenProps }) {\r\n  const { decks, setDecks } = screenProps;\r\n  const [communityDecks, setCommunityDecks] = useState(null);\r\n  const [fadeMessage, setFadeMessage] = useState(false);\r\n\r\n  const handleDownload = async (key) => {\r\n    const downloadedDeck = await apiClient.downloadDeck(key);\r\n    if (downloadedDeck) {\r\n      setDecks([...decks, downloadedDeck]);\r\n      setFadeMessage(showFadeMessage('Deck downloaded'));\r\n    }\r\n  }\r\n\r\n  const loadDecks = async () => {\r\n    apiClient.getAllCommunityDecks()\r\n      .then(decks => setCommunityDecks(decks));\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadDecks();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <FlatList\r\n        ListHeaderComponent={<Text style={{ ...globalStyles.titleText, textAlign: 'center', marginTop: 20 }}>Shared by the Community</Text>}\r\n        data={communityDecks}\r\n        keyExtractor={item => item._id}\r\n        renderItem={({ item }) => (\r\n          <View style={{ marginHorizontal: 20, marginBottom: 5 }}>\r\n            <TouchableOpacity\r\n              onPress={() => navigation.push('CommunityDeckDetails', { item, handleDownload })} /* the same than do navigation.navigate('ReviewDetails', item); */\r\n            >\r\n              <Card>\r\n                <View style={{ flex: 1 }}>\r\n                  <Text style={{ ...globalStyles.titleText, marginBottom: 10 }}>{item.title}</Text>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\r\n                    <TouchableOpacity>\r\n                      <Text style={globalStyles.geniusColor}>\r\n                        {item.author}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => handleDownload(item.key)}>\r\n                      <Text style={globalStyles.geniusColor}>\r\n                        Download\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  {/* <View>\r\n                    <FontAwesome name='star' size={14} {...globalStyles.geniusColor} />\r\n                  </View> */}\r\n                </View>\r\n              </Card>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n      {\r\n        fadeMessage\r\n      }\r\n    </View>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}