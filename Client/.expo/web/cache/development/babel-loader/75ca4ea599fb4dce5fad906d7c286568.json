{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport RadioForm from 'react-native-simple-radio-button';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Button from \"./Button\";\nimport apiClient from \"../apiClient\";\nimport { storeData } from \"../sharedFunctions\";\nimport config from \"../config\";\nvar reviewSchema = yup.object({\n  username: yup.string().min(4).max(10).required(),\n  password: yup.string().min(8).max(20).required(),\n  email: yup.string().email().max(40).required(),\n  gender: yup.string().required(),\n  birthdate: yup.date().max(new Date(), \"You can't be born in the future!\").typeError('birthdate is a required field').required()\n});\nvar radio_props = [{\n  label: 'Male',\n  value: 'true'\n}, {\n  label: 'Female',\n  value: 'false'\n}];\nexport default function SignUp(_ref) {\n  var setComponentToRender = _ref.setComponentToRender,\n      setIsAuthenticated = _ref.setIsAuthenticated;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var register = function register(user) {\n    var res, token;\n    return _regeneratorRuntime.async(function register$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(apiClient.register(user));\n\n          case 2:\n            res = _context.sent;\n            if (res === 'Email is already used') Alert.alert('Ooops!', user.email + \" is already used. Please change it.\");else {\n              token = res;\n              storeData(token, config.localTokenStorage);\n              setIsAuthenticated(true);\n              setComponentToRender('UserProfile');\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.container), globalStyles.subContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      email: '',\n      gender: '',\n      birthdate: 'Pick your birthdate'\n    },\n    validationSchema: reviewSchema,\n    onSubmit: function onSubmit(values) {\n      Keyboard.dismiss();\n      register(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, function (formikProps) {\n    return React.createElement(React.Fragment, null, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: globalStyles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Sign Up\"), React.createElement(TextInput, {\n      style: globalStyles.input,\n      placeholder: \"Your email...\",\n      value: formikProps.values.email,\n      onChangeText: formikProps.handleChange('email'),\n      onBlur: formikProps.handleBlur('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, formikProps.touched.email && formikProps.errors.email), React.createElement(TextInput, {\n      style: globalStyles.input,\n      secureTextEntry: true,\n      placeholder: \"Your password...\",\n      value: formikProps.values.password,\n      onChangeText: formikProps.handleChange('password'),\n      onBlur: formikProps.handleBlur('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, formikProps.touched.password && formikProps.errors.password), React.createElement(TextInput, {\n      style: globalStyles.input,\n      placeholder: \"Your username...\",\n      value: formikProps.values.username,\n      onChangeText: formikProps.handleChange('username'),\n      onBlur: formikProps.handleBlur('username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, formikProps.touched.username && formikProps.errors.username)), React.createElement(RadioForm, {\n      radio_props: radio_props,\n      initial: -1,\n      value: formikProps.values.gender,\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-around'\n      },\n      buttonSize: 12,\n      buttonColor: '#00a2e8',\n      onPress: formikProps.handleChange('gender'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, formikProps.touched.username && formikProps.errors.gender), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setDatePickerVisibility(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"calendar\",\n      style: globalStyles.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      placeholder: \"Pick your birthdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, formikProps.values.birthdate))), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, formikProps.touched.birthdate && formikProps.errors.birthdate), React.createElement(DateTimePickerModal, {\n      isVisible: isDatePickerVisible,\n      mode: \"date\",\n      onConfirm: function onConfirm(date) {\n        setDatePickerVisibility(false);\n        date = moment(date).format('LL');\n        formikProps.handleChange('birthdate')(date);\n      },\n      onCancel: function onCancel() {\n        return setDatePickerVisibility(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), React.createElement(Button, {\n      text: \"Sing Up\",\n      onPress: formikProps.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setComponentToRender('LogIn');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: globalStyles.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, \"Log In here!\")));\n  })));\n}","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/SignUp.js"],"names":["React","useState","Formik","yup","DateTimePickerModal","moment","RadioForm","FontAwesome","globalStyles","Button","apiClient","storeData","config","reviewSchema","object","username","string","min","max","required","password","email","gender","birthdate","date","Date","typeError","radio_props","label","value","SignUp","setComponentToRender","setIsAuthenticated","isDatePickerVisible","setDatePickerVisibility","register","user","res","Alert","alert","token","localTokenStorage","container","subContainer","values","Keyboard","dismiss","formikProps","title","input","handleChange","handleBlur","errorText","touched","errors","flexDirection","justifyContent","alignItems","icon","format","handleSubmit","link"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, ScrollView, Keyboard, TouchableOpacity, Alert } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport moment from 'moment';\r\nimport RadioForm from 'react-native-simple-radio-button';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport Button from './Button';\r\nimport apiClient from '../apiClient';\r\nimport { storeData } from '../sharedFunctions';\r\nimport config from '../config';\r\n\r\n\r\nconst reviewSchema = yup.object({\r\n  username: yup.string().min(4).max(10).required(),\r\n  password: yup.string().min(8).max(20).required(),\r\n  email: yup.string().email().max(40).required(),\r\n  gender: yup.string().required(),\r\n  birthdate: yup.date().max(new Date(), \"You can't be born in the future!\").typeError('birthdate is a required field').required(),\r\n});\r\n\r\nconst radio_props = [\r\n  { label: 'Male', value: 'true' },\r\n  { label: 'Female', value: 'false' }\r\n];\r\n\r\n\r\nexport default function SignUp ({ setComponentToRender, setIsAuthenticated }) {\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n  const register = async (user) => {\r\n    const res = await apiClient.register(user);\r\n\r\n    if (res === 'Email is already used')\r\n      Alert.alert('Ooops!', `${user.email} is already used. Please change it.`);\r\n    else {\r\n      const token = res;\r\n      storeData(token, config.localTokenStorage);\r\n      setIsAuthenticated(true);\r\n      setComponentToRender('UserProfile');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={{ ...globalStyles.container, ...globalStyles.subContainer }}>\r\n        <Formik\r\n          initialValues={{ username: '', password: '', email: '', gender: '', birthdate: 'Pick your birthdate' }}\r\n          validationSchema={reviewSchema}\r\n          onSubmit={(values) => {\r\n            Keyboard.dismiss();\r\n            register(values);\r\n          }}\r\n        >\r\n          {\r\n            (formikProps) => (\r\n              <>\r\n                <View>\r\n                  <Text style={globalStyles.title}>Sign Up</Text>\r\n                  <TextInput\r\n                    style={globalStyles.input}\r\n                    placeholder='Your email...'\r\n                    value={formikProps.values.email}\r\n                    onChangeText={formikProps.handleChange('email')}\r\n                    onBlur={formikProps.handleBlur('email')}\r\n                  />\r\n                  <Text style={globalStyles.errorText}>{formikProps.touched.email && formikProps.errors.email}</Text>\r\n                  <TextInput\r\n                    style={globalStyles.input}\r\n                    secureTextEntry\r\n                    placeholder='Your password...'\r\n                    value={formikProps.values.password}\r\n                    onChangeText={formikProps.handleChange('password')}\r\n                    onBlur={formikProps.handleBlur('password')}\r\n                  />\r\n                  <Text style={globalStyles.errorText}>{formikProps.touched.password && formikProps.errors.password}</Text>\r\n                  <TextInput\r\n                    style={globalStyles.input}\r\n                    placeholder='Your username...'\r\n                    value={formikProps.values.username}\r\n                    onChangeText={formikProps.handleChange('username')}\r\n                    onBlur={formikProps.handleBlur('username')}\r\n                  />\r\n                  <Text style={globalStyles.errorText}>{formikProps.touched.username && formikProps.errors.username}</Text>\r\n                </View>\r\n                <RadioForm\r\n                  radio_props={radio_props}\r\n                  initial={-1}  // to not select any at the beginning\r\n                  value={formikProps.values.gender}\r\n                  style={{ flexDirection: 'row', justifyContent: 'space-around' }}\r\n                  buttonSize={12}\r\n                  buttonColor={'#00a2e8'}\r\n                  onPress={formikProps.handleChange('gender')}\r\n                />\r\n                <Text style={globalStyles.errorText}>{formikProps.touched.username && formikProps.errors.gender}</Text>\r\n                <TouchableOpacity onPress={() => setDatePickerVisibility(true)}>\r\n                  <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <FontAwesome name=\"calendar\" style={globalStyles.icon} />\r\n                    <Text placeholder='Pick your birthdate'>\r\n                      {formikProps.values.birthdate}\r\n                    </Text>\r\n                  </View>\r\n                </TouchableOpacity>\r\n                <Text style={globalStyles.errorText}>{formikProps.touched.birthdate && formikProps.errors.birthdate}</Text>\r\n                <DateTimePickerModal\r\n                  isVisible={isDatePickerVisible}\r\n                  mode=\"date\"\r\n                  onConfirm={(date) => {\r\n                    setDatePickerVisibility(false);\r\n                    date = moment(date).format('LL');\r\n                    formikProps.handleChange('birthdate')(date);\r\n                  }}\r\n                  onCancel={() => setDatePickerVisibility(false)}\r\n                />\r\n                <Button\r\n                  text='Sing Up'\r\n                  onPress={formikProps.handleSubmit}\r\n                />\r\n                <TouchableOpacity onPress={() => setComponentToRender('LogIn')}>\r\n                  <Text style={globalStyles.link}>\r\n                    Log In here!\r\n                </Text>\r\n                </TouchableOpacity>\r\n              </>\r\n            )\r\n          }\r\n        </Formik>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}