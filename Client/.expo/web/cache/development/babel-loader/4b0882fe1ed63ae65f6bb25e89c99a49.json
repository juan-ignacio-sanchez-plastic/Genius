{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\node_modules\\\\react-native-dialog\\\\src\\\\Title.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar DialogTitle = function (_React$PureComponent) {\n  _inherits(DialogTitle, _React$PureComponent);\n\n  var _super = _createSuper(DialogTitle);\n\n  function DialogTitle() {\n    _classCallCheck(this, DialogTitle);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DialogTitle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          style = _this$props.style,\n          children = _this$props.children,\n          otherProps = _objectWithoutProperties(_this$props, [\"style\", \"children\"]);\n\n      return React.createElement(Text, _extends({\n        style: [styles.text, style]\n      }, otherProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }), children);\n    }\n  }]);\n\n  return DialogTitle;\n}(React.PureComponent);\n\nDialogTitle.propTypes = _objectSpread(_objectSpread({}, Text.propTypes), {}, {\n  style: PropTypes.any,\n  children: PropTypes.string.isRequired\n});\nDialogTitle.displayName = \"DialogTitle\";\nexport { DialogTitle as default };\nvar styles = StyleSheet.create({\n  text: Platform.select({\n    ios: {\n      color: \"black\",\n      textAlign: \"center\",\n      fontSize: 18,\n      fontWeight: \"600\"\n    },\n    android: {\n      fontWeight: \"500\",\n      fontSize: 18\n    },\n    web: {\n      fontWeight: \"500\",\n      fontSize: 18\n    }\n  })\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/node_modules/react-native-dialog/src/Title.js"],"names":["PropTypes","React","DialogTitle","props","style","children","otherProps","styles","text","PureComponent","propTypes","Text","any","string","isRequired","displayName","StyleSheet","create","Platform","select","ios","color","textAlign","fontSize","fontWeight","android","web"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;IAGqBC,W;;;;;;;;;;;;;6BASV;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACqBC,UADrB;;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAcJ,KAAd;AAAb,SAAuCE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,QADH,CADF;AAKD;;;;EAhBsCJ,KAAK,CAACQ,a;;AAA1BP,W,CACZQ,S,mCACFC,IAAI,CAACD,S;AACRN,EAAAA,KAAK,EAAEJ,SAAS,CAACY,G;AACjBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,MAAV,CAAiBC;;AAJVZ,W,CAOZa,W,GAAc,a;SAPFb,W;AAmBrB,IAAMK,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,IAAI,EAAEU,QAAQ,CAACC,MAAT,CAAgB;AACpBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,KAAK,EAAE,OADJ;AAEHC,MAAAA,SAAS,EAAE,QAFR;AAGHC,MAAAA,QAAQ,EAAE,EAHP;AAIHC,MAAAA,UAAU,EAAE;AAJT,KADe;AAOpBC,IAAAA,OAAO,EAAE;AACPD,MAAAA,UAAU,EAAE,KADL;AAEPD,MAAAA,QAAQ,EAAE;AAFH,KAPW;AAWpBG,IAAAA,GAAG,EAAE;AACHF,MAAAA,UAAU,EAAE,KADT;AAEHD,MAAAA,QAAQ,EAAE;AAFP;AAXe,GAAhB;AADyB,CAAlB,CAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Platform, StyleSheet, Text } from \"react-native\";\n\nexport default class DialogTitle extends React.PureComponent {\n  static propTypes = {\n    ...Text.propTypes,\n    style: PropTypes.any,\n    children: PropTypes.string.isRequired\n  };\n\n  static displayName = \"DialogTitle\";\n\n  render() {\n    const { style, children, ...otherProps } = this.props;\n    return (\n      <Text style={[styles.text, style]} {...otherProps}>\n        {children}\n      </Text>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: Platform.select({\n    ios: {\n      color: \"black\",\n      textAlign: \"center\",\n      fontSize: 18,\n      fontWeight: \"600\"\n    },\n    android: {\n      fontWeight: \"500\",\n      fontSize: 18\n    },\n    web: {\n      fontWeight: \"500\",\n      fontSize: 18\n    }\n  })\n});\n"]},"metadata":{},"sourceType":"module"}