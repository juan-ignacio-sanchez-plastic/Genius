{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\DeckAllCards.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dialog from \"react-native-dialog\";\nimport { NavigationEvents } from 'react-navigation';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Card from \"../shared/card\";\nexport default function DeckAllCards(_ref) {\n  var navigation = _ref.navigation;\n  var deck = navigation.getParam('deck');\n  var editCard = navigation.getParam('editCard');\n  var deleteCard = navigation.getParam('deleteCard');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      popUpDeleteCard = _useState2[0],\n      setPopUpDeleteCard = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyOfCardToDelete = _useState4[0],\n      setKeyOfCardToDelete = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateFlatList = _useState6[0],\n      setUpdateFlatList = _useState6[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: globalStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationEvents, {\n    onDidFocus: function onDidFocus() {\n      setUpdateFlatList(Math.random());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: deck.cards,\n    extraData: updateFlatList,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('AddOrEditCard', {\n            item: item,\n            editCard: editCard,\n            deckTitle: deck.title\n          });\n        },\n        onLongPress: function onLongPress() {\n          setPopUpDeleteCard(true);\n          setKeyOfCardToDelete(item.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: globalStyles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, item.front), React.createElement(Text, {\n        style: styles.grayLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }\n      }, \"_____________________\"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }\n      }, item.answer))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), React.createElement(Dialog.Container, {\n    visible: popUpDeleteCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Do you want to delete this card?\"), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return setPopUpDeleteCard(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Delete\",\n    onPress: function onPress() {\n      deleteCard(deck.title, keyOfCardToDelete);\n      setPopUpDeleteCard(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  grayLine: {\n    textAlign: 'center',\n    color: 'lightgray',\n    marginBottom: 10,\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/DeckAllCards.js"],"names":["React","useState","Dialog","NavigationEvents","globalStyles","Card","DeckAllCards","navigation","deck","getParam","editCard","deleteCard","popUpDeleteCard","setPopUpDeleteCard","keyOfCardToDelete","setKeyOfCardToDelete","updateFlatList","setUpdateFlatList","container","Math","random","cards","item","push","deckTitle","title","key","titleText","front","styles","grayLine","answer","StyleSheet","create","textAlign","color","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport Dialog from \"react-native-dialog\";\r\nimport { NavigationEvents } from 'react-navigation';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport Card from '../shared/card';\r\n\r\nexport default function DeckAllCards ({ navigation }) {\r\n  const deck = navigation.getParam('deck');\r\n  const editCard = navigation.getParam('editCard');\r\n  const deleteCard = navigation.getParam('deleteCard');\r\n  const [popUpDeleteCard, setPopUpDeleteCard] = useState(false);\r\n  const [keyOfCardToDelete, setKeyOfCardToDelete] = useState();\r\n  const [updateFlatList, setUpdateFlatList] = useState();\r\n\r\n  return (\r\n    <>\r\n      <View style={globalStyles.container}>\r\n        <NavigationEvents\r\n          onDidFocus={() => {\r\n            setUpdateFlatList(Math.random());  // need to pass a different value to FlatList to update it\r\n          }}\r\n        />\r\n        < FlatList\r\n          data={deck.cards}\r\n          extraData={updateFlatList}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              onPress={() => navigation.push('AddOrEditCard', { item, editCard, deckTitle: deck.title })}\r\n              onLongPress={() => {\r\n                setPopUpDeleteCard(true);\r\n                setKeyOfCardToDelete(item.key);\r\n              }}\r\n            >\r\n              <Card>\r\n                <View style={globalStyles.titleText}>\r\n                  <Text>\r\n                    {item.front}\r\n                  </Text>\r\n                  <Text style={styles.grayLine}>_____________________</Text>\r\n                  <Text>\r\n                    {item.answer}\r\n                  </Text>\r\n                </View>\r\n              </Card>\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n      </View>\r\n\r\n      <Dialog.Container visible={popUpDeleteCard}>\r\n        <Dialog.Title>Do you want to delete this card?</Dialog.Title>\r\n        <Dialog.Button label=\"Cancel\" onPress={() => setPopUpDeleteCard(false)} />\r\n        <Dialog.Button label=\"Delete\" onPress={() => {\r\n          deleteCard(deck.title, keyOfCardToDelete);\r\n          setPopUpDeleteCard(false);\r\n        }} />\r\n      </Dialog.Container>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  grayLine: {\r\n    textAlign: 'center',\r\n    color: 'lightgray',\r\n    marginBottom: 10,\r\n    fontSize: 16,\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}