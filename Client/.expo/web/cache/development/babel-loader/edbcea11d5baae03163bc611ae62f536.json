{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\UserProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport ButtonGray from \"./ButtonGray\";\nimport apiClient from \"../apiClient\";\nimport { removeToken } from \"../sharedFunctions\";\nexport default function UserProfile(_ref) {\n  var setIsAuthenticated = _ref.setIsAuthenticated,\n      setComponentToRender = _ref.setComponentToRender;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n\n  var getUserData = function getUserData() {\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            apiClient.profile().then(function (data) {\n              setUser(data);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLogout = function handleLogout() {\n    return _regeneratorRuntime.async(function handleLogout$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(removeToken());\n\n          case 2:\n            setIsAuthenticated(false);\n            setComponentToRender('LogIn');\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, user && React.createElement(React.Fragment, null, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.container), globalStyles.subContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/user3.png\"),\n    style: styles.headerImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.userName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, user.username), React.createElement(Text, {\n    style: globalStyles.userData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, user.gender ? 'Male' : 'Female'), React.createElement(Text, {\n    style: globalStyles.userData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, user.email)), React.createElement(ButtonGray, {\n    title: \"Log out\",\n    onPress: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  headerImage: {\n    width: 170,\n    marginHorizontal: 10,\n    resizeMode: 'contain',\n    borderRadius: 50\n  },\n  userName: _objectSpread(_objectSpread(_objectSpread({}, globalStyles.userData), globalStyles.geniusColor), {}, {\n    fontSize: 30,\n    fontWeight: '900'\n  })\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/UserProfile.js"],"names":["React","useState","useEffect","globalStyles","ButtonGray","apiClient","removeToken","UserProfile","setIsAuthenticated","setComponentToRender","user","setUser","getUserData","profile","then","data","handleLogout","container","subContainer","alignItems","marginBottom","require","styles","headerImage","userName","username","userData","gender","email","StyleSheet","create","row","flexDirection","width","marginHorizontal","resizeMode","borderRadius","geniusColor","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, ScrollView, Keyboard, Image } from 'react-native';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport ButtonGray from './ButtonGray';\r\nimport apiClient from '../apiClient';\r\nimport { removeToken } from '../sharedFunctions';\r\n\r\n\r\nexport default function UserProfile ({ setIsAuthenticated, setComponentToRender }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []);\r\n\r\n  const getUserData = async () => {\r\n    apiClient.profile()\r\n      .then(data => {\r\n        setUser(data);\r\n      });\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    await removeToken();\r\n    setIsAuthenticated(false);\r\n    setComponentToRender('LogIn');\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      {\r\n        user &&\r\n        <>\r\n          <View style={{ ...globalStyles.container, ...globalStyles.subContainer }}>\r\n            <View style={{ alignItems: 'center', marginBottom: 20 }}>\r\n              <Image\r\n                source={require('../assets/user3.png')}\r\n                style={styles.headerImage}\r\n              />\r\n              <Text style={styles.userName}>{user.username}</Text>\r\n              <Text style={globalStyles.userData}>{user.gender ? 'Male' : 'Female'}</Text>\r\n              <Text style={globalStyles.userData}>{user.email}</Text>\r\n            </View>\r\n            <ButtonGray\r\n              title='Log out'\r\n              onPress={handleLogout}\r\n            >\r\n            </ButtonGray>\r\n          </View>\r\n        </>\r\n      }\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  headerImage: {\r\n    width: 170,\r\n    marginHorizontal: 10,\r\n    resizeMode: 'contain',\r\n    borderRadius: 50,\r\n  },\r\n  userName: {\r\n    ...globalStyles.userData,\r\n    ...globalStyles.geniusColor,\r\n    fontSize: 30,\r\n    fontWeight: '900',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}