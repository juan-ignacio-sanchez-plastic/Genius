{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\SingUp.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport moment from 'moment';\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport FlatButton from \"./button\";\nvar reviewSchema = yup.object({\n  username: yup.string().min(4).max(10).required(),\n  password: yup.string().min(8).required(),\n  email: yup.string().email().required(),\n  gender: yup.string().required(),\n  birthday: yup.string().required()\n});\nvar radio_props = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}];\nexport default function SingUp() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      birthday = _useState4[0],\n      setBirthday = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      gender = _useState6[0],\n      setGender = _useState6[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    hideDatePicker();\n    setBirthday(date);\n  };\n\n  return React.createElement(View, {\n    style: globalStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      email: '',\n      gender: '',\n      birthday: null\n    },\n    validationSchema: reviewSchema,\n    onSubmit: function onSubmit(values) {\n      console.log('submited');\n      console.log(values);\n      Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, function (formikProps) {\n    return React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Sing Up\"), React.createElement(TextInput, {\n      style: globalStyles.input,\n      placeholder: \"Your username...\",\n      value: formikProps.values.username,\n      onChangeText: formikProps.handleChange('username'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, formikProps.errors.username), React.createElement(TextInput, {\n      style: globalStyles.input,\n      secureTextEntry: true,\n      placeholder: \"Your password...\",\n      value: formikProps.values.password,\n      onChangeText: formikProps.handleChange('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, formikProps.errors.password)), React.createElement(RadioForm, {\n      radio_props: radio_props,\n      initial: -1,\n      value: formikProps.values.gender,\n      onPress: formikProps.handleChange('gender'),\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-around'\n      },\n      buttonSize: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, formikProps.errors.gender), React.createElement(TextInput, {\n      style: globalStyles.input,\n      placeholder: \"Your birthday:   4 - 3 - 1992\",\n      value: moment(birthday).format('LL'),\n      onChangeText: formikProps.handleChange('birthday'),\n      onTouchStart: showDatePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), React.createElement(DateTimePickerModal, {\n      isVisible: isDatePickerVisible,\n      mode: \"date\",\n      onConfirm: handleConfirm,\n      onCancel: hideDatePicker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }), React.createElement(FlatButton, {\n      text: \"Sing Up\",\n      onPress: formikProps.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  title: {\n    color: '#54BCFF',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  btn_singUp: {\n    fontSize: 16,\n    color: '#54BCFF',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  circle: {\n    fontSize: 20,\n    color: 'lightgray'\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/SingUp.js"],"names":["React","useState","Formik","yup","DateTimePickerModal","moment","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","globalStyles","FlatButton","reviewSchema","object","username","string","min","max","required","password","email","gender","birthday","radio_props","label","value","SingUp","isDatePickerVisible","setDatePickerVisibility","setBirthday","setGender","showDatePicker","hideDatePicker","handleConfirm","date","container","values","console","log","Keyboard","dismiss","formikProps","styles","title","input","handleChange","errorText","errors","flexDirection","justifyContent","format","handleSubmit","StyleSheet","create","color","fontSize","textAlign","btn_singUp","marginTop","circle"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, ScrollView, Keyboard, Button } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\r\nimport moment from 'moment';\r\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport FlatButton from './button';\r\n\r\n\r\nconst reviewSchema = yup.object({\r\n  username: yup.string().min(4).max(10).required(),\r\n  password: yup.string().min(8).required(),\r\n  email: yup.string().email().required(),   // required('Email is required') to customize the message\r\n  gender: yup.string().required(),\r\n  birthday: yup.string().required(),\r\n});\r\n\r\nvar radio_props = [\r\n  { label: 'Male', value: 'male' },\r\n  { label: 'Female', value: 'female' }\r\n];\r\n\r\n\r\nexport default function SingUp () {\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n  const [birthday, setBirthday] = useState();\r\n  const [gender, setGender] = useState(null);\r\n\r\n  const showDatePicker = () => {\r\n    setDatePickerVisibility(true);\r\n  };\r\n\r\n  const hideDatePicker = () => {\r\n    setDatePickerVisibility(false);\r\n  };\r\n\r\n  const handleConfirm = (date) => {\r\n    hideDatePicker();\r\n    setBirthday(date);\r\n  };\r\n\r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <Formik\r\n        initialValues={{ username: '', password: '', email: '', gender: '', birthday: null }} // define the form fields and it's initial values\r\n        validationSchema={reviewSchema} // to add a validation schema\r\n        onSubmit={(values) => {\r\n          console.log('submited')\r\n          console.log(values);\r\n          Keyboard.dismiss();\r\n        }}\r\n      >\r\n        {\r\n          (formikProps) => (\r\n            <ScrollView>\r\n              <View>\r\n                <Text style={styles.title}>Sing Up</Text>\r\n                <TextInput\r\n                  style={globalStyles.input}\r\n                  placeholder='Your username...'\r\n                  value={formikProps.values.username}\r\n                  onChangeText={formikProps.handleChange('username')}\r\n                />\r\n                <Text style={globalStyles.errorText}>{formikProps.errors.username}</Text>\r\n                <TextInput\r\n                  style={globalStyles.input}\r\n                  secureTextEntry\r\n                  placeholder='Your password...'\r\n                  value={formikProps.values.password}\r\n                  onChangeText={formikProps.handleChange('password')}\r\n                />\r\n                <Text style={globalStyles.errorText}>{formikProps.errors.password}</Text>\r\n              </View>\r\n              <RadioForm\r\n                radio_props={radio_props}\r\n                initial={-1}  // to not select any at the beginning\r\n                value={formikProps.values.gender}\r\n                onPress={formikProps.handleChange('gender')}\r\n                style={{ flexDirection: 'row', justifyContent: 'space-around' }}\r\n                buttonSize={12}\r\n              />\r\n              <Text style={globalStyles.errorText}>{formikProps.errors.gender}</Text>\r\n              <TextInput\r\n                style={globalStyles.input}\r\n                placeholder='Your birthday:   4 - 3 - 1992'\r\n                // value={formikProps.values.birthday}\r\n                value={moment(birthday).format('LL')}\r\n                onChangeText={formikProps.handleChange('birthday')}\r\n                onTouchStart={showDatePicker}\r\n              />\r\n              {/* <Text>{moment(birthday).format('LL')}</Text>\r\n              <Button\r\n                onPress={showDatePicker}\r\n                title=\"Select date\"\r\n              /> */}\r\n              <DateTimePickerModal\r\n                isVisible={isDatePickerVisible}\r\n                mode=\"date\"\r\n                onConfirm={handleConfirm}\r\n                onCancel={hideDatePicker}\r\n              />\r\n              <FlatButton\r\n                text='Sing Up'\r\n                onPress={formikProps.handleSubmit}\r\n              />\r\n            </ScrollView>\r\n          )\r\n        }\r\n      </Formik>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    color: '#54BCFF',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n  btn_singUp: {\r\n    fontSize: 16,\r\n    color: '#54BCFF',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  circle: {\r\n    fontSize: 20,\r\n    color: 'lightgray',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}