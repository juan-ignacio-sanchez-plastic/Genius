{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Dialog from \"react-native-dialog\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport CardSchema from \"../schemas/CardSchema\";\nimport DeckSchema from \"../schemas/DeckSchema\";\nimport Card from \"../shared/Card\";\nimport AddOrEditCard from \"./AddOrEditCard\";\nimport mockDatabase from \"../mockDatabase\";\nimport { storeData, getData } from \"../sharedFunctions\";\nimport config from \"../config\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation,\n      screenProps = _ref.screenProps;\n  var decks = screenProps.decks,\n      setDecks = screenProps.setDecks;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popUpNewDeck = _useState4[0],\n      setPopUpNewDeck = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newDeckName = _useState6[0],\n      setNewDeckName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popUpDeleteDeck = _useState8[0],\n      setPopUpDeleteDeck = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deckToDelete = _useState10[0],\n      setDeckToDelete = _useState10[1];\n\n  useEffect(function () {\n    if (!decks) setDecks(mockDatabase);\n    getDecks();\n  }, []);\n  useEffect(function () {\n    storeDecks(decks);\n  }, [decks]);\n\n  var addCard = function addCard(deckTitle, card) {\n    var newCard = new CardSchema(card.front, card.answer, card.type, card.multipleChoiceIncorrectAnswers);\n    console.log('newCard: ', newCard);\n    var indexOfDeck;\n\n    for (indexOfDeck = 0; indexOfDeck < decks.length; indexOfDeck++) {\n      var deck = decks[indexOfDeck];\n\n      if (deck.title === deckTitle) {\n        deck.cards.length === 0 ? newCard.key = '0' : newCard.key = (+deck.cards[deck.cards.length - 1].key + 1).toString();\n        break;\n      }\n    }\n\n    var newDecks = _toConsumableArray(decks);\n\n    newDecks[indexOfDeck].cards.push(newCard);\n    setDecks(newDecks);\n    storeDecks(newDecks);\n    setModalOpen(false);\n  };\n\n  var editCard = function editCard(deckTitle, editedCard) {\n    for (var _iterator = _createForOfIteratorHelperLoose(decks), _step; !(_step = _iterator()).done;) {\n      var deck = _step.value;\n\n      if (deck.title === deckTitle) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(deck.cards), _step2; !(_step2 = _iterator2()).done;) {\n          var card = _step2.value;\n\n          if (card.key === editedCard.key) {\n            card.front = editedCard.front;\n            card.answer = editedCard.answer;\n            card.type = editedCard.type;\n            card.multipleChoiceIncorrectAnswers = editedCard.multipleChoiceIncorrectAnswers;\n            console.log('card: ', card);\n            storeDecks(decks);\n          }\n        }\n      }\n    }\n  };\n\n  var deleteCard = function deleteCard(deckTitle, cardKey) {\n    var newDecks = _toConsumableArray(decks);\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(newDecks), _step3; !(_step3 = _iterator3()).done;) {\n      var deck = _step3.value;\n\n      if (deck.title === deckTitle) {\n        deck.cards = deck.cards.filter(function (card) {\n          return card.key !== cardKey;\n        });\n        storeDecks(newDecks);\n        setDecks(newDecks);\n      }\n    }\n  };\n\n  var setNextReview = function setNextReview(deckTitle, cardKey, nextReview) {\n    var newDecks = _toConsumableArray(decks);\n\n    for (var _iterator4 = _createForOfIteratorHelperLoose(newDecks), _step4; !(_step4 = _iterator4()).done;) {\n      var deck = _step4.value;\n\n      if (deck.title === deckTitle) {\n        deck.cards.forEach(function (card) {\n          if (card.key === cardKey) {\n            card.lastReview = Date.now();\n            card.nextReview = Date.now() + nextReview;\n            storeDecks(newDecks);\n            setDecks(newDecks);\n          }\n        });\n      }\n    }\n  };\n\n  var addDeck = function addDeck(deckTitle) {\n    if (deckTitle) {\n      for (var _iterator5 = _createForOfIteratorHelperLoose(decks), _step5; !(_step5 = _iterator5()).done;) {\n        var deck = _step5.value;\n\n        if (deckTitle === deck.title) {\n          setPopUpNewDeck(false);\n          return;\n        }\n      }\n\n      var newDeck = new DeckSchema(deckTitle);\n      decks.push(newDeck);\n      setPopUpNewDeck(false);\n      setNewDeckName(null);\n    }\n  };\n\n  var deleteDeck = function deleteDeck(titleDeckToDelete) {\n    var newDecks = decks.filter(function (deck) {\n      return deck.title !== titleDeckToDelete;\n    });\n    setDecks(newDecks);\n    storeDecks(newDecks);\n    setPopUpDeleteDeck(false);\n    setDeckToDelete(null);\n  };\n\n  var storeDecks = function storeDecks(newDatabase) {\n    return _regeneratorRuntime.async(function storeDecks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(storeData(newDatabase, config.localDatabaseStorage));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getDecks = function getDecks() {\n    var userDecks;\n    return _regeneratorRuntime.async(function getDecks$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (decks) {\n              _context2.next = 5;\n              break;\n            }\n\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(getData(config.localDatabaseStorage));\n\n          case 3:\n            userDecks = _context2.sent;\n            setDecks(userDecks);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var cardsToStudy = function cardsToStudy(deck) {\n    return deck.cards.filter(function (card) {\n      return card.nextReview < Date.now();\n    }).length;\n  };\n\n  return React.createElement(View, {\n    style: globalStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"My Decks\"), React.createElement(Modal, {\n    visible: modalOpen,\n    animationType: \"slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"close\",\n    size: 24,\n    style: styles.modalToggle,\n    onPress: function onPress() {\n      return setModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), React.createElement(AddOrEditCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })))), decks && React.createElement(FlatList, {\n    data: decks,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: globalStyles.subContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('DeckDetails', {\n            item: item,\n            addCard: addCard,\n            editCard: editCard,\n            deleteCard: deleteCard,\n            setNextReview: setNextReview\n          });\n        },\n        onLongPress: function onLongPress() {\n          setPopUpDeleteDeck(true);\n          setDeckToDelete(item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }\n      }, item.title), cardsToStudy(item) !== 0 && React.createElement(Text, {\n        style: {\n          color: '#f01d71'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 49\n        }\n      }, cardsToStudy(item)))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), React.createElement(MaterialIcons, {\n    name: \"add\",\n    size: 24,\n    style: _objectSpread(_objectSpread({}, styles.modalToggle), styles.modalClose),\n    onPress: function onPress() {\n      return setPopUpNewDeck(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), React.createElement(Dialog.Container, {\n    visible: popUpNewDeck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, \"Deck title\"), React.createElement(Dialog.Input, {\n    placeholder: \"Write here the deck title...\",\n    onChangeText: function onChangeText(title) {\n      return setNewDeckName(title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return setPopUpNewDeck(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Save\",\n    onPress: function onPress() {\n      return addDeck(newDeckName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), React.createElement(Dialog.Container, {\n    visible: popUpDeleteDeck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"Do you want to delete this deck?\"), React.createElement(Dialog.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"You will lose all the cards.\"), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return setPopUpDeleteDeck(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Delete\",\n    onPress: function onPress() {\n      return deleteDeck(deckToDelete);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  modalToggle: {\n    marginTop: 20,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    padding: 10,\n    borderRadius: 30,\n    alignSelf: 'center'\n  },\n  modalClose: {\n    marginTop: 20,\n    marginBottom: 10\n  },\n  modalContent: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/Home.js"],"names":["React","useState","useEffect","MaterialIcons","Dialog","globalStyles","CardSchema","DeckSchema","Card","AddOrEditCard","mockDatabase","storeData","getData","config","Home","navigation","screenProps","decks","setDecks","modalOpen","setModalOpen","popUpNewDeck","setPopUpNewDeck","newDeckName","setNewDeckName","popUpDeleteDeck","setPopUpDeleteDeck","deckToDelete","setDeckToDelete","getDecks","storeDecks","addCard","deckTitle","card","newCard","front","answer","type","multipleChoiceIncorrectAnswers","console","log","indexOfDeck","length","deck","title","cards","key","toString","newDecks","push","editCard","editedCard","deleteCard","cardKey","filter","setNextReview","nextReview","forEach","lastReview","Date","now","addDeck","newDeck","deleteDeck","titleDeckToDelete","newDatabase","localDatabaseStorage","userDecks","cardsToStudy","container","titleText","Keyboard","dismiss","styles","modalContent","modalToggle","item","subContainer","color","modalClose","StyleSheet","create","marginTop","marginBottom","borderWidth","borderColor","padding","borderRadius","alignSelf","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity, Modal, TouchableWithoutFeedback, Keyboard } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Dialog from \"react-native-dialog\";\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport CardSchema from '../schemas/CardSchema';\r\nimport DeckSchema from '../schemas/DeckSchema';\r\nimport Card from '../shared/Card';\r\nimport AddOrEditCard from './AddOrEditCard';\r\nimport mockDatabase from '../mockDatabase';\r\nimport { storeData, getData } from '../sharedFunctions';\r\nimport config from '../config';\r\n\r\nexport default function Home ({ navigation, screenProps }) {\r\n  const { decks, setDecks } = screenProps;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [popUpNewDeck, setPopUpNewDeck] = useState(false);\r\n  const [newDeckName, setNewDeckName] = useState();\r\n  const [popUpDeleteDeck, setPopUpDeleteDeck] = useState(false);\r\n  const [deckToDelete, setDeckToDelete] = useState();\r\n\r\n  useEffect(() => {\r\n    if (!decks) setDecks(mockDatabase);\r\n    getDecks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    storeDecks(decks);\r\n  }, [decks]);\r\n\r\n  const addCard = (deckTitle, card) => {\r\n    const newCard = new CardSchema(card.front, card.answer, card.type, card.multipleChoiceIncorrectAnswers);\r\n    console.log('newCard: ', newCard)\r\n    // identificar el índice del deck\r\n    let indexOfDeck;\r\n    for (indexOfDeck = 0; indexOfDeck < decks.length; indexOfDeck++) {\r\n      let deck = decks[indexOfDeck];\r\n      if (deck.title === deckTitle) {\r\n        deck.cards.length === 0\r\n          ? newCard.key = '0'\r\n          : newCard.key = (+deck.cards[deck.cards.length - 1].key + 1).toString(); // key = lastCardKey + 1\r\n        break; // so idexOfDeck will have the last value\r\n      }\r\n    }\r\n\r\n    const newDecks = [...decks];\r\n    newDecks[indexOfDeck].cards.push(newCard);\r\n    setDecks(newDecks);\r\n    storeDecks(newDecks);\r\n    setModalOpen(false);\r\n  }\r\n\r\n  const editCard = (deckTitle, editedCard) => {\r\n    for (let deck of decks) {\r\n      if (deck.title === deckTitle) {\r\n        for (let card of deck.cards) {\r\n          if (card.key === editedCard.key) {\r\n            card.front = editedCard.front;\r\n            card.answer = editedCard.answer;\r\n            card.type = editedCard.type;\r\n            card.multipleChoiceIncorrectAnswers = editedCard.multipleChoiceIncorrectAnswers;\r\n            console.log('card: ', card)\r\n            storeDecks(decks);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const deleteCard = (deckTitle, cardKey) => {\r\n    const newDecks = [...decks];\r\n    for (let deck of newDecks) {\r\n      if (deck.title === deckTitle) {\r\n        deck.cards = deck.cards.filter(card => card.key !== cardKey);\r\n        storeDecks(newDecks);\r\n        setDecks(newDecks);\r\n      }\r\n    }\r\n  }\r\n\r\n  const setNextReview = (deckTitle, cardKey, nextReview) => {\r\n    const newDecks = [...decks];\r\n    for (let deck of newDecks) {\r\n      if (deck.title === deckTitle) {\r\n        deck.cards.forEach(card => {\r\n          if (card.key === cardKey) {\r\n            card.lastReview = Date.now();\r\n            card.nextReview = Date.now() + nextReview;\r\n            storeDecks(newDecks);\r\n            setDecks(newDecks);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const addDeck = (deckTitle) => {\r\n    if (deckTitle) {\r\n      for (let deck of decks) {\r\n        if (deckTitle === deck.title) {\r\n          setPopUpNewDeck(false);\r\n          return;\r\n        }\r\n      }\r\n      const newDeck = new DeckSchema(deckTitle);\r\n      decks.push(newDeck);\r\n      setPopUpNewDeck(false);\r\n      setNewDeckName(null);\r\n    }\r\n  }\r\n\r\n  const deleteDeck = (titleDeckToDelete) => {\r\n    const newDecks = decks.filter(deck => deck.title !== titleDeckToDelete);\r\n    setDecks(newDecks);\r\n    storeDecks(newDecks);\r\n    setPopUpDeleteDeck(false);\r\n    setDeckToDelete(null);\r\n  }\r\n\r\n  const storeDecks = async (newDatabase) => {\r\n    await storeData(newDatabase, config.localDatabaseStorage);\r\n  }\r\n\r\n  const getDecks = async () => {\r\n    if (!decks) {\r\n      const userDecks = await getData(config.localDatabaseStorage);\r\n      setDecks(userDecks);\r\n    }\r\n  }\r\n\r\n  const cardsToStudy = (deck) => {\r\n    return deck.cards.filter(card => card.nextReview < Date.now()).length;\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <Text style={globalStyles.titleText}>My Decks</Text>\r\n      <Modal visible={modalOpen} animationType='slide'>\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <View style={styles.modalContent}>\r\n            <MaterialIcons\r\n              name='close'\r\n              size={24}\r\n              style={styles.modalToggle}\r\n              onPress={() => setModalOpen(false)}\r\n            />\r\n            <AddOrEditCard />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n      {\r\n        decks &&\r\n        <FlatList\r\n          data={decks}\r\n          renderItem={({ item }) => (\r\n            <View style={globalStyles.subContainer}>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.push('DeckDetails', { item, addCard, editCard, deleteCard, setNextReview })} /* the same than do navigation.navigate('ReviewDetails', item); */\r\n                onLongPress={() => {\r\n                  setPopUpDeleteDeck(true);\r\n                  setDeckToDelete(item.title);\r\n                }}\r\n              >\r\n                <Card>\r\n                  <Text style={globalStyles.titleText}>{item.title}</Text>\r\n                  {\r\n                    cardsToStudy(item) !== 0 && <Text style={{ color: '#f01d71' }}>{cardsToStudy(item)}</Text>\r\n                  }\r\n                </Card>\r\n              </TouchableOpacity>\r\n            </View>\r\n          )}\r\n        />\r\n      }\r\n      <MaterialIcons\r\n        name='add'\r\n        size={24}\r\n        style={{ ...styles.modalToggle, ...styles.modalClose }}\r\n        onPress={() => setPopUpNewDeck(true)}\r\n      />\r\n\r\n      <Dialog.Container visible={popUpNewDeck}>\r\n        <Dialog.Title>Deck title</Dialog.Title>\r\n        <Dialog.Input\r\n          placeholder='Write here the deck title...'\r\n          onChangeText={(title) => setNewDeckName(title)}\r\n        />\r\n        <Dialog.Button label=\"Cancel\" onPress={() => setPopUpNewDeck(false)} />\r\n        <Dialog.Button label=\"Save\" onPress={() => addDeck(newDeckName)} />\r\n      </Dialog.Container>\r\n\r\n      <Dialog.Container visible={popUpDeleteDeck}>\r\n        <Dialog.Title>Do you want to delete this deck?</Dialog.Title>\r\n        <Dialog.Description>You will lose all the cards.</Dialog.Description>\r\n        <Dialog.Button label=\"Cancel\" onPress={() => setPopUpDeleteDeck(false)} />\r\n        <Dialog.Button label=\"Delete\" onPress={() => deleteDeck(deckToDelete)} />\r\n      </Dialog.Container>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalToggle: {\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'lightgrey',\r\n    padding: 10,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n  },\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}