{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\CardDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport config from \"../config\";\nimport moment from 'moment';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Card from \"../shared/Card\";\nimport ButtonGray from \"../shared/buttonGray\";\nexport default function CardDetails(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAnswer = _useState2[0],\n      setShowAnswer = _useState2[1];\n\n  var _useState3 = useState(navigation.getParam('cardsToStudy')),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cardsToStudy = _useState4[0],\n      setCardsToStudy = _useState4[1];\n\n  var setNextReview = navigation.getParam('setNextReview');\n  var deckTitle = navigation.getParam('deckTitle');\n  var intervals = {\n    again: null,\n    hard: null,\n    good: null,\n    easy: null\n  };\n\n  var setIntervals = function setIntervals() {\n    var reviewInterval = cardsToStudy[0].nextReview - cardsToStudy[0].lastReview;\n\n    if (reviewInterval <= 6e+5) {\n      intervals.good = 7.2e+6;\n    } else if (reviewInterval <= 7.2e+6) {\n      intervals.good = 8.64e+7;\n    } else if (reviewInterval <= 8.64e+7) {\n      intervals.good = 1.728e+8;\n    } else if (reviewInterval <= 1.728e+8) {\n      intervals.good = 2.592e+8;\n    } else if (reviewInterval <= 2.592e+8) {\n      intervals.good = 4.32e+8;\n    } else if (reviewInterval > 4.32e+8) {\n      intervals.good = reviewInterval + 4.32e+8;\n    }\n\n    intervals.easy = intervals.good * config.easy;\n    intervals.hard = intervals.good * config.hard;\n    intervals.again = 6e+4;\n  };\n\n  var invervalFormatted = function invervalFormatted(time) {\n    if (time < 3.6e+6) {\n      return Math.round(time / 6e+4) + \" minutes\";\n    }\n\n    if (time < 7.2e+6) {\n      return '1 hour';\n    }\n\n    if (time < 8.64e+7) {\n      return Math.round(time / 3.6e+6) + \" hours\";\n    }\n\n    if (time < 1.728e+8) {\n      return '1 day';\n    }\n\n    if (time < 2.628e+9) {\n      return Math.round(time / 8.64e+7) + \" days\";\n    }\n\n    if (time < 5.256e+9) {\n      return '1 month';\n    }\n\n    if (time < 3.154e+10) {\n      return Math.round(time / 2.628e+9) + \" months\";\n    }\n\n    if (time < 6.307e+10) {\n      return '1 year';\n    }\n\n    if (time >= 6.307e+10) {\n      return \"\" + Math.round(time / 3.154e+10);\n    }\n  };\n\n  var setNextReviewAndCardsToStudy = function setNextReviewAndCardsToStudy(interval) {\n    setNextReview(deckTitle, cardsToStudy[0].key, interval);\n    cardsToStudy.shift();\n    setCardsToStudy(_toConsumableArray(cardsToStudy));\n    setShowAnswer(false);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: globalStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, cardsToStudy.length === 0 ? React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, globalStyles.text), {}, {\n      textAlign: 'center'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"No cards to study\") : React.createElement(React.Fragment, null, setIntervals(), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, cardsToStudy[0].front)), showAnswer ? React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, cardsToStudy[0].answer)) : React.createElement(ButtonGray, {\n    title: \"Mostrar respuesta\",\n    onPress: function onPress() {\n      return setShowAnswer(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }))), showAnswer && React.createElement(View, {\n    style: styles.buttonsConteiner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.again);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#FF3232'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Again\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, \"10 min\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.hard);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#A7A7A7'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Hard\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, invervalFormatted(intervals.hard)))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.good);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#07B549'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Good\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, invervalFormatted(intervals.good)))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setNextReviewAndCardsToStudy(intervals.easy);\n    },\n    style: [styles.buttonText, {\n      backgroundColor: '#46E6FF'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.perception,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Easy\"), React.createElement(Text, {\n    style: styles.interval,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, invervalFormatted(intervals.easy))))));\n}\nvar styles = StyleSheet.create({\n  buttonsConteiner: {\n    flexDirection: 'row',\n    flex: 1\n  },\n  buttonText: {\n    alignSelf: 'flex-end',\n    flex: 1,\n    margin: 1,\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10\n  },\n  perception: {\n    textAlign: 'center'\n  },\n  interval: {\n    fontSize: 12,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/CardDetails.js"],"names":["React","useState","config","moment","globalStyles","Card","ButtonGray","CardDetails","navigation","showAnswer","setShowAnswer","getParam","cardsToStudy","setCardsToStudy","setNextReview","deckTitle","intervals","again","hard","good","easy","setIntervals","reviewInterval","nextReview","lastReview","invervalFormatted","time","Math","round","setNextReviewAndCardsToStudy","interval","key","shift","container","length","text","textAlign","front","answer","styles","buttonsConteiner","buttonText","backgroundColor","perception","StyleSheet","create","flexDirection","flex","alignSelf","margin","paddingTop","paddingBottom","borderRadius","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, Button, TouchableOpacity } from 'react-native';\r\nimport config from '../config';\r\nimport moment from 'moment';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport Card from '../shared/Card';\r\nimport ButtonGray from '../shared/buttonGray';\r\n\r\nexport default function CardDetails ({ navigation }) {\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [cardsToStudy, setCardsToStudy] = useState(navigation.getParam('cardsToStudy'));\r\n  const setNextReview = navigation.getParam('setNextReview');\r\n  const deckTitle = navigation.getParam('deckTitle');\r\n  const intervals = {\r\n    again: null,\r\n    hard: null,\r\n    good: null,\r\n    easy: null,\r\n  };\r\n\r\n  const setIntervals = () => {\r\n    const reviewInterval = cardsToStudy[0].nextReview - cardsToStudy[0].lastReview;\r\n    if (reviewInterval <= 6e+5) {   // 10 min\r\n      intervals.good = 7.2e+6;\r\n    } else if (reviewInterval <= 7.2e+6) {  // 2 hours\r\n      intervals.good = 8.64e+7;\r\n    } else if (reviewInterval <= 8.64e+7) {   // 1 day\r\n      intervals.good = 1.728e+8;\r\n    } else if (reviewInterval <= 1.728e+8) {  // 2 days\r\n      intervals.good = 2.592e+8;\r\n    } else if (reviewInterval <= 2.592e+8) { // 3 days\r\n      intervals.good = 4.32e+8;\r\n    } else if (reviewInterval > 4.32e+8) { // 5 days\r\n      intervals.good = reviewInterval + 4.32e+8;\r\n    }\r\n    intervals.easy = intervals.good * config.easy;\r\n    intervals.hard = intervals.good * config.hard;\r\n    intervals.again = 6e+4;   // CORRECT TO 10 min\r\n  };\r\n\r\n  const invervalFormatted = (time) => {\r\n    if (time < 3.6e+6) {  // 1 hour\r\n      return `${Math.round(time / 6e+4)} minutes`;\r\n    }\r\n    if (time < 7.2e+6) {  // 2 hours\r\n      return '1 hour';\r\n    }\r\n    if (time < 8.64e+7) {  // 1 day\r\n      return `${Math.round(time / 3.6e+6)} hours`;\r\n    }\r\n    if (time < 1.728e+8) { // 2 days\r\n      return '1 day';\r\n    }\r\n    if (time < 2.628e+9) { // 1 month\r\n      return `${Math.round(time / 8.64e+7)} days`;\r\n    }\r\n    if (time < 5.256e+9) { // 2 months\r\n      return '1 month';\r\n    }\r\n    if (time < 3.154e+10) {  // 1 year\r\n      return `${Math.round(time / 2.628e+9)} months`;\r\n    }\r\n    if (time < 6.307e+10) {  // 2 year\r\n      return '1 year';\r\n    }\r\n    if (time >= 6.307e+10) {  // 2 year\r\n      return `${Math.round(time / 3.154e+10)}`;\r\n    }\r\n  }\r\n\r\n  const setNextReviewAndCardsToStudy = (interval) => {\r\n    setNextReview(deckTitle, cardsToStudy[0].key, interval);\r\n    cardsToStudy.shift();\r\n    setCardsToStudy([...cardsToStudy]);\r\n    setShowAnswer(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={globalStyles.container}>\r\n        {\r\n          cardsToStudy.length === 0\r\n            ? < Text style={{ ...globalStyles.text, textAlign: 'center' }}>No cards to study</Text>\r\n            : <>\r\n              {setIntervals()}\r\n              <Card>\r\n                <Text>{cardsToStudy[0].front}</Text>\r\n              </Card>\r\n              {\r\n                showAnswer\r\n                  ?\r\n                  <Card>\r\n                    <Text>{cardsToStudy[0].answer}</Text>\r\n                  </Card>\r\n                  :\r\n                  <ButtonGray\r\n                    title='Mostrar respuesta'\r\n                    onPress={() => setShowAnswer(true)}\r\n                  />\r\n              }\r\n            </>\r\n        }\r\n      </View>\r\n      {\r\n        showAnswer &&\r\n        <View style={styles.buttonsConteiner}>\r\n          <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.again)} style={[styles.buttonText, { backgroundColor: '#FF3232' }]}>\r\n            <View>\r\n              <Text style={styles.perception}>Again</Text>\r\n              <Text style={styles.interval}>10 min</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.hard)} style={[styles.buttonText, { backgroundColor: '#A7A7A7' }]}>\r\n            <View>\r\n              <Text style={styles.perception}>Hard</Text>\r\n              <Text style={styles.interval}>{invervalFormatted(intervals.hard)}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.good)} style={[styles.buttonText, { backgroundColor: '#07B549' }]}>\r\n            <View>\r\n              <Text style={styles.perception}>Good</Text>\r\n              <Text style={styles.interval}>{invervalFormatted(intervals.good)}</Text>\r\n            </View>\r\n          </TouchableOpacity >\r\n          <TouchableOpacity onPress={() => setNextReviewAndCardsToStudy(intervals.easy)} style={[styles.buttonText, { backgroundColor: '#46E6FF' }]}>\r\n            <View>\r\n              <Text style={styles.perception}>Easy</Text>\r\n              <Text style={styles.interval}>{invervalFormatted(intervals.easy)}</Text>\r\n            </View>\r\n          </TouchableOpacity >\r\n        </View >\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonsConteiner: {\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n  },\r\n  buttonText: {\r\n    alignSelf: 'flex-end',\r\n    flex: 1,\r\n    margin: 1,\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    borderRadius: 10,\r\n  },\r\n  perception: {\r\n    textAlign: 'center',\r\n  },\r\n  interval: {\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n  }\r\n}); "]},"metadata":{},"sourceType":"module"}