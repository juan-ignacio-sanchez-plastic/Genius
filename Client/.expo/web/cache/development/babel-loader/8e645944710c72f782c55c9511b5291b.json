{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\screens\\\\Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Dialog from \"react-native-dialog\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport CardSchema from \"../schemas/CardSchema\";\nimport DeckSchema from \"../schemas/DeckSchema\";\nimport Card from \"../shared/Card\";\nimport AddOrEditCard from \"./AddOrEditCard\";\nimport { State } from 'react-native-gesture-handler';\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popUpNewDeck = _useState4[0],\n      setPopUpNewDeck = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newDeckName = _useState6[0],\n      setNewDeckName = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      popUpDeleteDeck = _useState8[0],\n      setPopUpDeleteDeck = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deckToDelete = _useState10[0],\n      setDeckToDelete = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      decks = _useState12[0],\n      setDecks = _useState12[1];\n\n  getData();\n\n  var addCard = function addCard(deckTitle, card) {\n    var newCard = new CardSchema(card.front, card.answer, card.type);\n    var indexOfDeck;\n\n    for (indexOfDeck = 0; indexOfDeck < decks.length; indexOfDeck++) {\n      var deck = decks[indexOfDeck];\n\n      if (deck.title === deckTitle) {\n        deck.cards.length === 0 ? newCard.key = '0' : newCard.key = (+deck.cards[deck.cards.length - 1].key + 1).toString();\n        break;\n      }\n    }\n\n    var newDecks = _toConsumableArray(decks);\n\n    newDecks[indexOfDeck].cards.push(newCard);\n    setDecks(newDecks);\n    storeData(decks);\n    setModalOpen(false);\n  };\n\n  var editCard = function editCard(deckTitle, cardKey, cardFront, cardAnswer) {\n    for (var _iterator = _createForOfIteratorHelperLoose(decks), _step; !(_step = _iterator()).done;) {\n      var deck = _step.value;\n\n      if (deck.title === deckTitle) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(deck.cards), _step2; !(_step2 = _iterator2()).done;) {\n          var card = _step2.value;\n\n          if (card.key === cardKey) {\n            card.front = cardFront;\n            card.answer = cardAnswer;\n            storeData(decks);\n          }\n        }\n      }\n    }\n  };\n\n  var deleteCard = function deleteCard(deckTitle, cardKey) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(decks), _step3; !(_step3 = _iterator3()).done;) {\n      var deck = _step3.value;\n\n      if (deck.title === deckTitle) {\n        deck.cards = deck.cards.filter(function (card) {\n          return card.key !== cardKey;\n        });\n        storeData(decks);\n      }\n    }\n  };\n\n  var setNextReview = function setNextReview(deckTitle, cardKey, nextReview) {\n    for (var _iterator4 = _createForOfIteratorHelperLoose(decks), _step4; !(_step4 = _iterator4()).done;) {\n      var deck = _step4.value;\n\n      if (deck.title === deckTitle) {\n        deck.cards.forEach(function (card) {\n          if (card.key === cardKey) {\n            card.lastReview = Date.now();\n            card.nextReview = Date.now() + nextReview;\n            console.log('lastReview: ', card.lastReview);\n            console.log('nextReview: ', card.nextReview);\n            console.log('dif: ', card.nextReview - card.lastReview);\n            console.log('---------------------------------');\n            storeData(decks);\n          }\n        });\n      }\n    }\n  };\n\n  var addDeck = function addDeck(deckTitle) {\n    if (deckTitle) {\n      for (var _iterator5 = _createForOfIteratorHelperLoose(decks), _step5; !(_step5 = _iterator5()).done;) {\n        var deck = _step5.value;\n\n        if (deckTitle === deck.title) {\n          setPopUpNewDeck(false);\n          return;\n        }\n      }\n\n      var keyNewDeck = decks.length.toString();\n      var newDeck = new DeckSchema(deckTitle, keyNewDeck);\n      decks.push(newDeck);\n      storeData(decks);\n      setPopUpNewDeck(false);\n      setNewDeckName(null);\n    }\n  };\n\n  var deleteDeck = function deleteDeck(titleDeckToDelete) {\n    setDecks(decks.filter(function (deck) {\n      return deck.title !== titleDeckToDelete;\n    }));\n    storeData(decks);\n    setPopUpDeleteDeck(false);\n    setDeckToDelete(null);\n  };\n\n  var editDeck = function editDeck(deckEdited) {\n    for (var _iterator6 = _createForOfIteratorHelperLoose(decks), _step6; !(_step6 = _iterator6()).done;) {\n      var deck = _step6.value;\n\n      if (deck.title === deckEdited.title) {\n        deck = deckEdited;\n      }\n    }\n  };\n\n  var storeData = function storeData(newDatabase) {\n    var jsonNewDatabase;\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonNewDatabase = JSON.stringify(newDatabase);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('database', jsonNewDatabase));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(\"Couldn't save the data in the local database: \", _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  function getData() {\n    var data, parsedData;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (decks) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('database'));\n\n          case 4:\n            data = _context2.sent;\n            parsedData = JSON.parse(data);\n            setDecks(parsedData);\n\n          case 7:\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(\"Couldn't connect to the local database: \", _context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }\n\n  var cardsToStudy = function cardsToStudy(deck) {\n    return deck.cards.filter(function (card) {\n      return card.nextReview < Date.now();\n    }).length;\n  };\n\n  return React.createElement(View, {\n    style: globalStyles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: globalStyles.titleText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"My Decks\"), React.createElement(Modal, {\n    visible: modalOpen,\n    animationType: \"slide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"close\",\n    size: 24,\n    style: styles.modalToggle,\n    onPress: function onPress() {\n      return setModalOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), React.createElement(AddOrEditCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  })))), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, cardsToStudy(decks[3])), React.createElement(FlatList, {\n    data: decks,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.push('DeckDetails', {\n            item: item,\n            addCard: addCard,\n            editCard: editCard,\n            deleteCard: deleteCard,\n            setNextReview: setNextReview\n          });\n        },\n        onLongPress: function onLongPress() {\n          setPopUpDeleteDeck(true);\n          setDeckToDelete(item.title);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: globalStyles.titleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }\n      }, item.title), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, cardsToStudy(item))));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), React.createElement(MaterialIcons, {\n    name: \"add\",\n    size: 24,\n    style: _objectSpread(_objectSpread({}, styles.modalToggle), styles.modalClose),\n    onPress: function onPress() {\n      return setPopUpNewDeck(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), React.createElement(Dialog.Container, {\n    visible: popUpNewDeck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"Deck title\"), React.createElement(Dialog.Input, {\n    placeholder: \"Write here the deck title...\",\n    onChangeText: function onChangeText(title) {\n      return setNewDeckName(title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return setPopUpNewDeck(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Save\",\n    onPress: function onPress() {\n      return addDeck(newDeckName);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  })), React.createElement(Dialog.Container, {\n    visible: popUpDeleteDeck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, React.createElement(Dialog.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Do you want to delete this deck?\"), React.createElement(Dialog.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"You will lose all the cards.\"), React.createElement(Dialog.Button, {\n    label: \"Cancel\",\n    onPress: function onPress() {\n      return setPopUpDeleteDeck(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"Delete\",\n    onPress: function onPress() {\n      return deleteDeck(deckToDelete);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  modalToggle: {\n    marginTop: 20,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'lightgrey',\n    padding: 10,\n    borderRadius: 30,\n    alignSelf: 'center'\n  },\n  modalClose: {\n    marginTop: 20,\n    marginBottom: 10\n  },\n  modalContent: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/screens/Home.js"],"names":["React","useState","MaterialIcons","Dialog","globalStyles","CardSchema","DeckSchema","Card","AddOrEditCard","State","Home","navigation","modalOpen","setModalOpen","popUpNewDeck","setPopUpNewDeck","newDeckName","setNewDeckName","popUpDeleteDeck","setPopUpDeleteDeck","deckToDelete","setDeckToDelete","decks","setDecks","getData","addCard","deckTitle","card","newCard","front","answer","type","indexOfDeck","length","deck","title","cards","key","toString","newDecks","push","storeData","editCard","cardKey","cardFront","cardAnswer","deleteCard","filter","setNextReview","nextReview","forEach","lastReview","Date","now","console","log","addDeck","keyNewDeck","newDeck","deleteDeck","titleDeckToDelete","editDeck","deckEdited","newDatabase","jsonNewDatabase","JSON","stringify","AsyncStorage","setItem","error","getItem","data","parsedData","parse","cardsToStudy","container","titleText","Keyboard","dismiss","styles","modalContent","modalToggle","item","modalClose","StyleSheet","create","marginTop","marginBottom","borderWidth","borderColor","padding","borderRadius","alignSelf","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableOpacity, Modal, TouchableWithoutFeedback, Keyboard, AsyncStorage } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Dialog from \"react-native-dialog\";\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport CardSchema from '../schemas/CardSchema';\r\nimport DeckSchema from '../schemas/DeckSchema';\r\nimport Card from '../shared/Card';\r\nimport AddOrEditCard from './AddOrEditCard';\r\nimport { State } from 'react-native-gesture-handler';\r\n\r\n\r\nexport default function Home ({ navigation }) {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [popUpNewDeck, setPopUpNewDeck] = useState(false);\r\n  const [newDeckName, setNewDeckName] = useState();\r\n  const [popUpDeleteDeck, setPopUpDeleteDeck] = useState(false);\r\n  const [deckToDelete, setDeckToDelete] = useState();\r\n  const [decks, setDecks] = useState(null);\r\n  getData();\r\n\r\n  const addCard = (deckTitle, card) => {\r\n    const newCard = new CardSchema(card.front, card.answer, card.type);\r\n\r\n    // identificar el indice del deck\r\n    let indexOfDeck;\r\n    for (indexOfDeck = 0; indexOfDeck < decks.length; indexOfDeck++) {\r\n      let deck = decks[indexOfDeck];\r\n      if (deck.title === deckTitle) {\r\n        deck.cards.length === 0\r\n          ? newCard.key = '0'\r\n          : newCard.key = (+deck.cards[deck.cards.length - 1].key + 1).toString(); // key = lastCardKey + 1\r\n        break; // so idexOfDeck will have the last value\r\n      }\r\n    }\r\n    // agregar tarjeta\r\n    let newDecks = [...decks];\r\n    newDecks[indexOfDeck].cards.push(newCard);\r\n    setDecks(newDecks);\r\n    storeData(decks);\r\n\r\n    setModalOpen(false);\r\n  }\r\n\r\n  const editCard = (deckTitle, cardKey, cardFront, cardAnswer) => {\r\n    for (let deck of decks) {\r\n      if (deck.title === deckTitle) {\r\n        for (let card of deck.cards) {\r\n          if (card.key === cardKey) {\r\n            card.front = cardFront;\r\n            card.answer = cardAnswer;\r\n            storeData(decks);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const deleteCard = (deckTitle, cardKey) => {\r\n    for (let deck of decks) {\r\n      if (deck.title === deckTitle) {\r\n        deck.cards = deck.cards.filter(card => card.key !== cardKey);\r\n        storeData(decks);\r\n      }\r\n    }\r\n  }\r\n\r\n  const setNextReview = (deckTitle, cardKey, nextReview) => {\r\n    for (let deck of decks) {\r\n      if (deck.title === deckTitle) {\r\n        deck.cards.forEach(card => {\r\n          if (card.key === cardKey) {\r\n            card.lastReview = Date.now();\r\n            card.nextReview = Date.now() + nextReview;\r\n            console.log('lastReview: ', card.lastReview)\r\n            console.log('nextReview: ', card.nextReview)\r\n            console.log('dif: ', card.nextReview - card.lastReview)\r\n            console.log('---------------------------------')\r\n            storeData(decks);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const addDeck = (deckTitle) => {\r\n    if (deckTitle) {\r\n      for (let deck of decks) {\r\n        if (deckTitle === deck.title) {\r\n          setPopUpNewDeck(false);\r\n          return;\r\n        }\r\n      }\r\n      const keyNewDeck = decks.length.toString();\r\n      const newDeck = new DeckSchema(deckTitle, keyNewDeck);\r\n      decks.push(newDeck);\r\n      storeData(decks);\r\n      setPopUpNewDeck(false);\r\n      setNewDeckName(null);\r\n    }\r\n  }\r\n\r\n  const deleteDeck = (titleDeckToDelete) => {\r\n    setDecks(decks.filter(deck => deck.title !== titleDeckToDelete));\r\n    storeData(decks);\r\n    setPopUpDeleteDeck(false);\r\n    setDeckToDelete(null);\r\n  }\r\n\r\n  const editDeck = (deckEdited) => {\r\n    for (let deck of decks) {\r\n      if (deck.title === deckEdited.title) {\r\n        deck = deckEdited;\r\n      }\r\n    }\r\n  }\r\n\r\n  const storeData = async (newDatabase) => {\r\n    try {\r\n      const jsonNewDatabase = JSON.stringify(newDatabase);\r\n      await AsyncStorage.setItem('database', jsonNewDatabase);\r\n    } catch (e) {\r\n      console.error(\"Couldn't save the data in the local database: \", e);\r\n    }\r\n  }\r\n\r\n  async function getData () {\r\n    try {\r\n      if (!decks) {\r\n        const data = await AsyncStorage.getItem('database');\r\n        const parsedData = JSON.parse(data)\r\n        setDecks(parsedData);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Couldn't connect to the local database: \", e);\r\n    }\r\n  }\r\n\r\n  const cardsToStudy = (deck) => {\r\n    return deck.cards.filter(card => card.nextReview < Date.now()).length;\r\n  }\r\n\r\n  return (\r\n    <View style={globalStyles.container} >\r\n      <Text style={globalStyles.titleText}>My Decks</Text>\r\n      <Modal visible={modalOpen} animationType='slide'>\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <View style={styles.modalContent}>\r\n            <MaterialIcons\r\n              name='close'\r\n              size={24}\r\n              style={styles.modalToggle}\r\n              onPress={() => setModalOpen(false)}\r\n            />\r\n            <AddOrEditCard />\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </Modal>\r\n      <Text>{cardsToStudy(decks[3])}</Text>\r\n      <FlatList\r\n        data={decks}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            onPress={() => navigation.push('DeckDetails', { item, addCard, editCard, deleteCard, setNextReview })} /* the same than do navigation.navigate('ReviewDetails', item); */\r\n            onLongPress={() => {\r\n              setPopUpDeleteDeck(true);\r\n              setDeckToDelete(item.title);\r\n            }}\r\n          >\r\n            <Card>\r\n              <Text style={globalStyles.titleText}>{item.title}</Text>\r\n              <Text>{cardsToStudy(item)}</Text>\r\n            </Card>\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n      <MaterialIcons\r\n        name='add'\r\n        size={24}\r\n        style={{ ...styles.modalToggle, ...styles.modalClose }}\r\n        onPress={() => setPopUpNewDeck(true)}\r\n      />\r\n\r\n      <Dialog.Container visible={popUpNewDeck}>\r\n        <Dialog.Title>Deck title</Dialog.Title>\r\n        <Dialog.Input\r\n          placeholder='Write here the deck title...'\r\n          onChangeText={(title) => setNewDeckName(title)}\r\n        />\r\n        <Dialog.Button label=\"Cancel\" onPress={() => setPopUpNewDeck(false)} />\r\n        <Dialog.Button label=\"Save\" onPress={() => addDeck(newDeckName)} />\r\n      </Dialog.Container>\r\n\r\n      <Dialog.Container visible={popUpDeleteDeck}>\r\n        <Dialog.Title>Do you want to delete this deck?</Dialog.Title>\r\n        <Dialog.Description>You will lose all the cards.</Dialog.Description>\r\n        <Dialog.Button label=\"Cancel\" onPress={() => setPopUpDeleteDeck(false)} />\r\n        <Dialog.Button label=\"Delete\" onPress={() => deleteDeck(deckToDelete)} />\r\n      </Dialog.Container>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalToggle: {\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: 'lightgrey',\r\n    padding: 10,\r\n    borderRadius: 30,\r\n    alignSelf: 'center',\r\n  },\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  modalContent: {\r\n    flex: 1,\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}