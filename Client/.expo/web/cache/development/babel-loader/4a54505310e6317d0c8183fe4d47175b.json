{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navigator from \"./routes/drawer\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'nunito-regular': require(\"./assets/fonts/Nunito-Regular.ttf\"),\n    'nunito-bold': require(\"./assets/fonts/Nunito-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAuthenticated = _useState4[0],\n      setIsAuthenticated = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      decks = _useState6[0],\n      setDecks = _useState6[1];\n\n  useEffect(function () {\n    console.log('isAuthenticated: ', isAuthenticated);\n  }, [isAuthenticated]);\n\n  if (fontsLoaded) {\n    return React.createElement(Navigator, {\n      screenProps: {\n        isAuthenticated: isAuthenticated,\n        setIsAuthenticated: setIsAuthenticated,\n        decks: decks,\n        setDecks: setDecks\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n}","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/App.js"],"names":["React","useState","useEffect","Font","AppLoading","Navigator","getFonts","loadAsync","require","App","fontsLoaded","setFontsLoaded","isAuthenticated","setIsAuthenticated","decks","setDecks","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,SAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMH,IAAI,CAACI,SAAL,CAAe;AACpC,sBAAkBC,OAAO,qCADW;AAEpC,mBAAeA,OAAO;AAFc,GAAf,CAAN;AAAA,CAAjB;;AAKA,eAAe,SAASC,GAAT,GAAgB;AAAA,kBACSR,QAAQ,CAAC,KAAD,CADjB;AAAA;AAAA,MACtBS,WADsB;AAAA,MACTC,cADS;;AAAA,mBAEiBV,QAAQ,CAAC,KAAD,CAFzB;AAAA;AAAA,MAEtBW,eAFsB;AAAA,MAELC,kBAFK;;AAAA,mBAGHZ,QAAQ,CAAC,IAAD,CAHL;AAAA;AAAA,MAGtBa,KAHsB;AAAA,MAGfC,QAHe;;AAK7Bb,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,eAAjC;AACD,GAFQ,EAEN,CAACA,eAAD,CAFM,CAAT;;AAIA,MAAIF,WAAJ,EAAiB;AACf,WAEE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE;AACXE,QAAAA,eAAe,EAAfA,eADW;AAEXC,QAAAA,kBAAkB,EAAlBA,kBAFW;AAGXC,QAAAA,KAAK,EAALA,KAHW;AAIXC,QAAAA,QAAQ,EAARA;AAJW,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAWD,GAZD,MAYO;AACL,WAEE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAET,QADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMK,cAAc,CAAC,IAAD,CAApB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAOD;AACF","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';  /* to get the necessary methods to load my custom fonts */\nimport { AppLoading } from 'expo';  /* component that will be shown while the app is fetching data and is not ready */\n\nimport Navigator from './routes/drawer';\n\nconst getFonts = () => Font.loadAsync({   /* Loads the fonts asynchronously */\n  'nunito-regular': require('./assets/fonts/Nunito-Regular.ttf'),\n  'nunito-bold': require('./assets/fonts/Nunito-Bold.ttf'),\n});\n\nexport default function App () {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);   // this needs to be here, have to see how pass it throw the navigator\n  const [decks, setDecks] = useState(null);\n\n  useEffect(() => {\n    console.log('isAuthenticated: ', isAuthenticated);\n  }, [isAuthenticated])\n\n  if (fontsLoaded) {\n    return (\n\n      <Navigator\n        screenProps={{\n          isAuthenticated,\n          setIsAuthenticated,\n          decks,\n          setDecks,\n        }}\n      />\n    )\n  } else {\n    return (\n\n      <AppLoading\n        startAsync={getFonts}\n        onFinish={() => setFontsLoaded(true)}   /* when finish loading the fonts change the flag's value */\n      />\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}