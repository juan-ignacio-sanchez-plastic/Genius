{"ast":null,"code":"var _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\MultipleChoiceCardReview.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\nimport { Formik } from 'formik';\nimport Button from \"./Button\";\nimport { verifyAnswer } from \"../sharedFunctions\";\nimport Card from \"../shared/Card\";\nexport default function MultipleChoiceCardReview(_ref) {\n  var card = _ref.card,\n      verifyUserAnswer = _ref.verifyUserAnswer,\n      cardStatus = _ref.cardStatus,\n      setCardStatus = _ref.setCardStatus;\n  var showAnswer = cardStatus.showAnswer,\n      isAnswerCorrect = cardStatus.isAnswerCorrect;\n  var radio_props = [{\n    label: card.answer,\n    value: card.answer\n  }, {\n    label: card.multipleChoiceIncorrectAnswers[0],\n    value: card.multipleChoiceIncorrectAnswers[0]\n  }, {\n    label: card.multipleChoiceIncorrectAnswers[1],\n    value: card.multipleChoiceIncorrectAnswers[1]\n  }, {\n    label: card.multipleChoiceIncorrectAnswers[2],\n    value: card.multipleChoiceIncorrectAnswers[2]\n  }];\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      userAnswer: null\n    },\n    onSubmit: function onSubmit(_ref2) {\n      var userAnswer = _ref2.userAnswer;\n      var isCorrect = verifyAnswer(userAnswer, card);\n      verifyUserAnswer(isCorrect);\n      if (isCorrect) setCardStatus({\n        showAnswer: true,\n        isAnswerCorrect: true\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, function (formikProps) {\n    return React.createElement(React.Fragment, null, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, card.front)), showAnswer && React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, card.answer)), isAnswerCorrect || React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, React.createElement(RadioForm, {\n      radio_props: radio_props,\n      initial: -1,\n      value: formikProps.values.userAnswer,\n      onPress: formikProps.handleChange('userAnswer'),\n      buttonSize: 12,\n      animation: false,\n      style: {\n        marginVertical: 20,\n        height: 150,\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }), React.createElement(Button, {\n      text: \"Verify\",\n      onPress: formikProps.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/MultipleChoiceCardReview.js"],"names":["React","useState","RadioForm","RadioButton","RadioButtonInput","RadioButtonLabel","Formik","Button","verifyAnswer","Card","MultipleChoiceCardReview","card","verifyUserAnswer","cardStatus","setCardStatus","showAnswer","isAnswerCorrect","radio_props","label","answer","value","multipleChoiceIncorrectAnswers","userAnswer","isCorrect","formikProps","front","values","handleChange","marginVertical","height","justifyContent","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TouchableOpacity, Text, View, Keyboard, ScrollView } from 'react-native';\r\nimport RadioForm, { RadioButton, RadioButtonInput, RadioButtonLabel } from 'react-native-simple-radio-button';\r\nimport { Formik } from 'formik';\r\n\r\nimport Button from './Button';\r\nimport { verifyAnswer } from '../sharedFunctions';\r\nimport Card from '../shared/Card';\r\n\r\n\r\nexport default function MultipleChoiceCardReview ({ card, verifyUserAnswer, cardStatus, setCardStatus }) {\r\n  const { showAnswer, isAnswerCorrect } = cardStatus;\r\n  const radio_props = [\r\n    { label: card.answer, value: card.answer },\r\n    { label: card.multipleChoiceIncorrectAnswers[0], value: card.multipleChoiceIncorrectAnswers[0] },\r\n    { label: card.multipleChoiceIncorrectAnswers[1], value: card.multipleChoiceIncorrectAnswers[1] },\r\n    { label: card.multipleChoiceIncorrectAnswers[2], value: card.multipleChoiceIncorrectAnswers[2] },\r\n  ];\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Formik\r\n        initialValues={{ userAnswer: null }}\r\n        onSubmit={({ userAnswer }) => {\r\n          const isCorrect = verifyAnswer(userAnswer, card);\r\n          verifyUserAnswer(isCorrect);\r\n          if (isCorrect) setCardStatus({ showAnswer: true, isAnswerCorrect: true })\r\n        }}\r\n      >\r\n        {\r\n          (formikProps) => (\r\n            <>\r\n              <Card>\r\n                <Text>{card.front}</Text>\r\n              </Card>\r\n              {\r\n                showAnswer &&\r\n                <Card>\r\n                  <Text>{card.answer}</Text>\r\n                </Card>\r\n              }\r\n              {\r\n                isAnswerCorrect ||\r\n                <View>\r\n                  <RadioForm\r\n                    radio_props={radio_props}\r\n                    initial={-1}  // to not select any at the beginning\r\n                    value={formikProps.values.userAnswer}\r\n                    onPress={formikProps.handleChange('userAnswer')}\r\n                    buttonSize={12}\r\n                    animation={false}\r\n                    style={{ marginVertical: 20, height: 150, justifyContent: 'space-between' }}\r\n                  />\r\n                  <Button\r\n                    text='Verify'\r\n                    onPress={formikProps.handleSubmit}\r\n                  />\r\n                </View>\r\n              }\r\n            </>\r\n          )\r\n        }\r\n      </Formik>\r\n    </ScrollView>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}