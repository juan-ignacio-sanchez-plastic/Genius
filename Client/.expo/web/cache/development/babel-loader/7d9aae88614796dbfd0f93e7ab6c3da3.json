{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Juany\\\\Escritorio Jun 2020\\\\Programacion\\\\React Native\\\\Genius\\\\Client\\\\shared\\\\LogIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport Button from \"./Button\";\nimport apliClient from \"../apiClient\";\nimport { storeData } from \"../sharedFunctions\";\nimport config from \"../config\";\nvar reviewSchema = yup.object({\n  password: yup.string().min(8).max(20).required(),\n  email: yup.string().email().max(40).required()\n});\nexport default function LogIn(_ref) {\n  var setComponentToRender = _ref.setComponentToRender,\n      setIsAuthenticated = _ref.setIsAuthenticated;\n\n  var logIn = function logIn(user) {\n    var res, token;\n    return _regeneratorRuntime.async(function logIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(apliClient.login(user));\n\n          case 2:\n            res = _context.sent;\n\n            if (!(res === 'Email or password incorrect')) {\n              _context.next = 7;\n              break;\n            }\n\n            Alert.alert('Ooops!', 'Email or password incorrect');\n            _context.next = 13;\n            break;\n\n          case 7:\n            token = res;\n            console.log('Token recibido en Login:', token);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(storeData(token, config.localTokenStorage));\n\n          case 11:\n            setIsAuthenticated(true);\n            setComponentToRender('UserProfile');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.subContainer), globalStyles.container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: reviewSchema,\n    onSubmit: function onSubmit(values) {\n      Keyboard.dismiss();\n      logIn(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: globalStyles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Log In\"), React.createElement(TextInput, {\n      style: globalStyles.input,\n      placeholder: \"Insert your email...\",\n      value: formikProps.values.email,\n      onChangeText: formikProps.handleChange('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, formikProps.touched.password && formikProps.errors.email), React.createElement(TextInput, {\n      style: globalStyles.input,\n      secureTextEntry: true,\n      placeholder: \"Insert your password...\",\n      value: formikProps.values.password,\n      onChangeText: formikProps.handleChange('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: globalStyles.errorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, formikProps.touched.email && formikProps.errors.password), React.createElement(Button, {\n      text: \"Log In\",\n      onPress: formikProps.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setComponentToRender('SignUp');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: globalStyles.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, \"Sign up here!\")));\n  })));\n}\nvar styles = StyleSheet.create({\n  title: {\n    color: '#54BCFF',\n    fontSize: 20,\n    textAlign: 'center',\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["C:/Juany/Escritorio Jun 2020/Programacion/React Native/Genius/Client/shared/LogIn.js"],"names":["React","useState","Formik","yup","globalStyles","Button","apliClient","storeData","config","reviewSchema","object","password","string","min","max","required","email","LogIn","setComponentToRender","setIsAuthenticated","logIn","user","login","res","Alert","alert","token","console","log","localTokenStorage","subContainer","container","values","Keyboard","dismiss","formikProps","title","input","handleChange","errorText","touched","errors","handleSubmit","link","styles","StyleSheet","create","color","fontSize","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, ScrollView, Keyboard, TouchableOpacity, Alert } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport Button from './Button';\r\nimport apliClient from '../apiClient';\r\nimport { storeData } from '../sharedFunctions';\r\nimport config from '../config';\r\n\r\n\r\nconst reviewSchema = yup.object({\r\n  password: yup.string().min(8).max(20).required(),\r\n  email: yup.string().email().max(40).required(),\r\n});\r\n\r\n\r\nexport default function LogIn ({ setComponentToRender, setIsAuthenticated }) {  // TODO: onSumbit function, singUp redirection\r\n\r\n  const logIn = async (user) => {\r\n    const res = await apliClient.login(user);\r\n\r\n    if (res === 'Email or password incorrect')\r\n      Alert.alert('Ooops!', 'Email or password incorrect');\r\n    else {\r\n      const token = res;\r\n      console.log('Token recibido en Login:', token)\r\n      await storeData(token, config.localTokenStorage);\r\n      setIsAuthenticated(true);\r\n      setComponentToRender('UserProfile');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={{ ...globalStyles.subContainer, ...globalStyles.container }}>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validationSchema={reviewSchema}\r\n          onSubmit={(values) => {\r\n            Keyboard.dismiss();\r\n            logIn(values);\r\n          }}\r\n        >\r\n          {\r\n            (formikProps) => (\r\n              <View>\r\n                <Text style={globalStyles.title}>Log In</Text>\r\n                <TextInput\r\n                  style={globalStyles.input}\r\n                  placeholder='Insert your email...'\r\n                  value={formikProps.values.email}\r\n                  onChangeText={formikProps.handleChange('email')}\r\n                />\r\n                <Text style={globalStyles.errorText}>{formikProps.touched.password && formikProps.errors.email}</Text>\r\n                <TextInput\r\n                  style={globalStyles.input}\r\n                  secureTextEntry\r\n                  placeholder='Insert your password...'\r\n                  value={formikProps.values.password}\r\n                  onChangeText={formikProps.handleChange('password')}\r\n                />\r\n                <Text style={globalStyles.errorText}>{formikProps.touched.email && formikProps.errors.password}</Text>\r\n                <Button\r\n                  text='Log In'\r\n                  onPress={formikProps.handleSubmit}\r\n                />\r\n                <TouchableOpacity onPress={() => setComponentToRender('SignUp')}>\r\n                  <Text style={globalStyles.link}>\r\n                    Sign up here!\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            )\r\n          }\r\n        </Formik>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    color: '#54BCFF',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}